{"version":3,"sources":["../../src/timepicker/ClockFace.tsx","../../src/timepicker/utils.ts","../../src/timepicker/TimePicker.tsx","../../src/index.tsx","App.js","index.js"],"names":["hour","minute","meridiem","onTimeUpdate","clock_tick_list","range","className","styles","curr_minute","tick","rotation","hh_class","mm_class","key","style","transform","onClick","ClockHands","mm_rotation","hh_rotation","React","generateTimeOutput","hour24","time","now","formatted","format","TimeTitleWrapper","time_format","TimePicker","useState","input_time","res_hour","res_minute","res_meridiem","isObject","isUndefined","Number","modulo","isString","trim","hhmm","createInputTime","curr_time","setTime","handleTimeChange","useCallback","res_time","new_time","App","marginTop","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.30282816.chunk.js","sourcesContent":["import React from 'react';\nimport {range} from 'lodash'\n\nimport { MainTime } from \"./interfaces\";\nimport styles from './timepicker.css'\n\n\ninterface ClockFaceProps extends MainTime {\n\tonTimeUpdate : ({}:MainTime) => void\n}\n\n\nexport default ({hour, minute, meridiem, onTimeUpdate} : ClockFaceProps) => {\n\tconst clock_tick_list: number[] = range(1, 13)\n\n\treturn (\n\t\t<div className={styles.clockface} >\n\t\t\t<div className={styles.clock}>\n\n\t\t\t\t<ClockHands hour={hour} minute={minute} />\n\n\t\t\t\t{ // draw clock hands\n\t\t\t\tclock_tick_list.map((tick) => {\n\t\t\t\t\tconst curr_minute = tick === 12 ? 0 : (tick * 5)\n\t\t\t\t\tlet rotation = tick === 12 ? 0 : tick * 30\n\t\t\t\t\t// adjust hands so 12 O'clock is at the top rather than at 3 O'clock\n\t\t\t\t\trotation -= 90\n\t\t\t\t\t// is current tick active ?\n\t\t\t\t\tconst hh_class = tick === hour ? styles.hh_active : styles.hh\n\t\t\t\t\tconst mm_class = curr_minute === minute ? styles.mm_active : styles.mm\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className={styles.hand_wrapper} key={tick} \n\t\t\t\t\t\t\tstyle={{transform:`rotate(${rotation}deg)`}} >\n\n\t\t\t\t\t\t\t<div className={mm_class} style={{transform:`rotate(${-rotation}deg)`}}\n\t\t\t\t\t\t\t\tonClick={() => onTimeUpdate({hour, meridiem, minute:curr_minute})}>\n\t\t\t\t\t\t\t\t{curr_minute}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className={hh_class} style={{transform:`rotate(${-rotation}deg)`}}\n\t\t\t\t\t\t\t\tonClick={() => onTimeUpdate({minute, meridiem, hour:tick})}>\n\t\t\t\t\t\t\t\t{tick}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\n\t\t\t</div>\n\t\t\t<div className={`${meridiem==='AM' ? \n\t\t\t\tstyles.meridiem_active : styles.meridiem} ${styles.meridiem_am}`}\n\t\t\t\tonClick={() => onTimeUpdate({hour, minute, meridiem:\"AM\"})} >AM</div>\n\n\t\t\t<div className={`${meridiem==='PM' ? \n\t\t\t\tstyles.meridiem_active : styles.meridiem} ${styles.meridiem_pm}`}\n\t\t\t\tonClick={() => onTimeUpdate({hour, minute, meridiem:\"PM\"})} >PM</div>\n\t\t</div>\n\t)\n}\n\nconst ClockHands = ({hour, minute}:any) => {\n\tconst mm_rotation = ((minute / 5) * 30) - 90\n\tconst hh_rotation = hour === 12 ? -90 : (hour * 30) - 90\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className={styles.mm_hand} style={{transform:`rotate(${mm_rotation}deg)`}} ></div>\n\t\t\t<div className={styles.hh_hand} style={{transform:`rotate(${hh_rotation}deg)`}} ></div>\n\t\t</React.Fragment>\n\t)\n}","import { isObject, isString, isUndefined, trim } from \"lodash\";\nimport { format } from \"date-fns\";\n\n\nimport { TimePickerProps, MainTime, OutputTime } from \"./interfaces\";\n\n\nexport const createInputTime = (input_time : TimePickerProps[\"time\"]):MainTime => {\n\t// default values\n\tlet res_hour = 8, res_minute = 0, res_meridiem = 'AM';\n\n\tif(isObject(input_time)) {\n\t\tconst {hour, hour24, minute, meridiem} = input_time\n\t\tif(isUndefined(hour) && isUndefined(hour24)) {\n\t\t\t// keep hour as it is\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = meridiem ? meridiem : res_meridiem\n\t\t}\n\t\telse if(isUndefined(hour)) {\n\t\t\t// 24 hour format given\n\t\t\tconst modulo = Number(hour24) % 12\n\t\t\tres_hour = modulo === 0 ? 12 : modulo\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = Number(hour24) >= 12 ? 'PM' : 'AM'\n\t\t}\n\t\telse {\n\t\t\t// 12 hour format given\n\t\t\tres_hour = Number(hour) === 0 ? 12 : Number(hour)\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = meridiem ? meridiem : res_meridiem\n\t\t}\n\t} else if (isString(input_time)) {\n\t\tif(input_time.includes(\"m\")) {\n\t\t\t// 12 hrs format\n\t\t\tconst [hhmm, meridiem] = trim(input_time).split(\" \")\n\t\t\tconst [hour, minute] = trim(hhmm).split(\":\")\n\n\t\t\tres_hour = Number(hour) === 0 ? 12 : Number(hour)\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = meridiem ? meridiem : res_meridiem\n\t\t}\n\t\telse {\n\t\t\t// 24 hrs format\n\t\t\tconst [hour24, minute] = trim(input_time).split(\":\")\n\t\t\tconst modulo = Number(hour24) % 12\n\t\t\tres_hour = modulo === 0 ? 12 : modulo\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = Number(hour24) >= 12 ? 'PM' : 'AM'\n\t\t}\n\t}\n\n\treturn {\n\t\thour : res_hour, minute : res_minute, meridiem : res_meridiem\n\t}\n}\n\nexport const generateTimeOutput = (\n\t{hour, minute, meridiem} : MainTime, \n\ttime_format:string\n):OutputTime => {\n\t\n\tlet hour24 = hour\n\t// create hour24\n\tif(meridiem === 'PM') {\n\t\t// 12 PM is 12 hrs\n\t\thour24 =(hour === 12) ? 12 : hour + 12\n\t} else {\n\t\t// 12 AM is 00 hrs\n\t\tif(hour === 12) hour24 = 0\n\t}\n\tlet time = {hour, minute, meridiem, hour24}\n\n\t// create time formatted string\n\tlet now = new Date()\n\tnow.setHours(hour24)\n\tnow.setMinutes(minute)\n\tconst formatted = format(now, time_format)\n\n\treturn {\n\t\tformatted,\n\t\ttime\n\t}\n}","import React, {useState, useCallback} from \"react\";\n\nimport ClockFace from './ClockFace'\n\nimport { createInputTime, generateTimeOutput } from \"./utils\";\n\nimport { TimePickerProps, MainTime } from \"./interfaces\";\n\nimport styles from './timepicker.css'\n\n\nexport default ({time, format='hh:mm aaa', onTimeUpdate} : TimePickerProps) => {\n\n\tconst [curr_time, setTime] = useState(createInputTime(time))\n\n\tconst handleTimeChange = useCallback((new_time : MainTime) => {\n\t\tconst res_time = generateTimeOutput(new_time, format)\n\t\tonTimeUpdate(res_time)\n\t\tsetTime(new_time)\n\t}, [])\n\n\t\n\treturn(\n\t\t<div className={styles.wrapper} style={{}}>\n\t\t\t<TimeTitleWrapper {...curr_time} time_format={format} />\n\n\t\t\t<ClockFace {...curr_time} onTimeUpdate={handleTimeChange} />\n\t\t</div>\n\t)\n}\n\n\ninterface TimeTitleWrapperProps extends MainTime {\n\ttime_format : string\n}\n\nconst TimeTitleWrapper = ({hour, minute, meridiem, time_format}:TimeTitleWrapperProps) => {\n\n\tconst {formatted} = generateTimeOutput({hour, minute, meridiem}, time_format)\n\n\treturn (\n\t\t<div className={styles.title}>\n\t\t\t{formatted}\n\t\t</div>\n\t)\n}","import TimePickerModule from \"./timepicker/TimePicker\";\n\nexport const TimePicker = TimePickerModule\n","import React from 'react'\n\nimport { TimePicker } from 'react-datetime-range-super-picker'\nimport 'react-datetime-range-super-picker/dist/index.css'\n\nconst App = () => {\n\treturn (\n\t\t<div style={{marginTop:\"150px\"}}>\n\t\t\t<TimePicker time={{hour24 : 22, minute : 30}} \n\t\t\t\tonTimeUpdate={(time) => console.log(time)} />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}