{"version":3,"sources":["../../src/timepicker/ClockFace.tsx","../../src/timepicker/utils.ts","../../src/timepicker/TimePicker.tsx","../../src/monthpicker/utils.ts","../../src/index.tsx","../../src/monthpicker/MonthPicker.tsx","App.js","index.js"],"names":["hour","minute","meridiem","onTimeUpdate","clock_tick_list","range","className","styles","curr_minute","tick","rotation","hh_class","mm_class","key","style","transform","onClick","ClockHands","mm_rotation","hh_rotation","React","generateTimeOutput","hour24","time","now","formatted","format","TimeTitleWrapper","time_format","formatMonth","month","str_format","TimePicker","useState","input_time","res_hour","res_minute","res_meridiem","isObject","isUndefined","Number","modulo","isString","trim","hhmm","createInputTime","curr_time","setTime","handleTimeChange","useCallback","res_time","new_time","MonthPicker","year","edit","setEdit","res_year","setYear","res_month","setMonth","Math","m_pos","setMPos","handleMonthPosChange","next_pos","month_list","wrapper","year_edit","placeholder","value","onChange","e","year_show","month_wrapper","root_styles","month_pill_wrapper","month_pill_crousel","m_class","curr_month","App","textAlign","marginTop","margin","fontSize","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.62d67dc6.chunk.js","sourcesContent":["import React from 'react';\nimport {range} from 'lodash'\n\nimport { MainTime } from \"./interfaces\";\nimport styles from './timepicker.css'\n\n\ninterface ClockFaceProps extends MainTime {\n\tonTimeUpdate : ({}:MainTime) => void\n}\n\n\nexport default ({hour, minute, meridiem, onTimeUpdate} : ClockFaceProps) => {\n\tconst clock_tick_list: number[] = range(1, 13)\n\n\treturn (\n\t\t<div className={styles.clockface} >\n\t\t\t<div className={styles.clock}>\n\n\t\t\t\t<ClockHands hour={hour} minute={minute} />\n\n\t\t\t\t{ // draw clock hands\n\t\t\t\tclock_tick_list.map((tick) => {\n\t\t\t\t\tconst curr_minute = tick === 12 ? 0 : (tick * 5)\n\t\t\t\t\tlet rotation = tick === 12 ? 0 : tick * 30\n\t\t\t\t\t// adjust hands so 12 O'clock is at the top rather than at 3 O'clock\n\t\t\t\t\trotation -= 90\n\t\t\t\t\t// is current tick active ?\n\t\t\t\t\tconst hh_class = tick === hour ? styles.hh_active : styles.hh\n\t\t\t\t\tconst mm_class = curr_minute === minute ? styles.mm_active : styles.mm\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className={styles.hand_wrapper} key={tick} \n\t\t\t\t\t\t\tstyle={{transform:`rotate(${rotation}deg)`}} >\n\n\t\t\t\t\t\t\t<div className={mm_class} style={{transform:`rotate(${-rotation}deg)`}}\n\t\t\t\t\t\t\t\tonClick={() => onTimeUpdate({hour, meridiem, minute:curr_minute})}>\n\t\t\t\t\t\t\t\t{curr_minute}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className={hh_class} style={{transform:`rotate(${-rotation}deg)`}}\n\t\t\t\t\t\t\t\tonClick={() => onTimeUpdate({minute, meridiem, hour:tick})}>\n\t\t\t\t\t\t\t\t{tick}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\n\t\t\t</div>\n\t\t\t<div className={`${meridiem==='AM' ? \n\t\t\t\tstyles.meridiem_active : styles.meridiem} ${styles.meridiem_am}`}\n\t\t\t\tonClick={() => onTimeUpdate({hour, minute, meridiem:\"AM\"})} >AM</div>\n\n\t\t\t<div className={`${meridiem==='PM' ? \n\t\t\t\tstyles.meridiem_active : styles.meridiem} ${styles.meridiem_pm}`}\n\t\t\t\tonClick={() => onTimeUpdate({hour, minute, meridiem:\"PM\"})} >PM</div>\n\t\t</div>\n\t)\n}\n\nconst ClockHands = ({hour, minute}:any) => {\n\tconst mm_rotation = ((minute / 5) * 30) - 90\n\tconst hh_rotation = hour === 12 ? -90 : (hour * 30) - 90\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className={styles.mm_hand} style={{transform:`rotate(${mm_rotation}deg)`}} ></div>\n\t\t\t<div className={styles.hh_hand} style={{transform:`rotate(${hh_rotation}deg)`}} ></div>\n\t\t</React.Fragment>\n\t)\n}","import { isObject, isString, isUndefined, trim } from \"lodash\";\nimport { format } from \"date-fns\";\n\n\nimport { TimePickerProps, MainTime, OutputTime } from \"./interfaces\";\n\n\nexport const createInputTime = (input_time : TimePickerProps[\"time\"]):MainTime => {\n\t// default values\n\tlet res_hour = 8, res_minute = 0, res_meridiem = 'AM';\n\n\tif(isObject(input_time)) {\n\t\tconst {hour, hour24, minute, meridiem} = input_time\n\t\tif(isUndefined(hour) && isUndefined(hour24)) {\n\t\t\t// keep hour as it is\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = meridiem ? meridiem : res_meridiem\n\t\t}\n\t\telse if(isUndefined(hour)) {\n\t\t\t// 24 hour format given\n\t\t\tconst modulo = Number(hour24) % 12\n\t\t\tres_hour = modulo === 0 ? 12 : modulo\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = Number(hour24) >= 12 ? 'PM' : 'AM'\n\t\t}\n\t\telse {\n\t\t\t// 12 hour format given\n\t\t\tres_hour = Number(hour) === 0 ? 12 : Number(hour)\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = meridiem ? meridiem : res_meridiem\n\t\t}\n\t} else if (isString(input_time)) {\n\t\tif(input_time.includes(\"m\")) {\n\t\t\t// 12 hrs format\n\t\t\tconst [hhmm, meridiem] = trim(input_time).split(\" \")\n\t\t\tconst [hour, minute] = trim(hhmm).split(\":\")\n\n\t\t\tres_hour = Number(hour) === 0 ? 12 : Number(hour)\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = meridiem ? meridiem : res_meridiem\n\t\t}\n\t\telse {\n\t\t\t// 24 hrs format\n\t\t\tconst [hour24, minute] = trim(input_time).split(\":\")\n\t\t\tconst modulo = Number(hour24) % 12\n\t\t\tres_hour = modulo === 0 ? 12 : modulo\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = Number(hour24) >= 12 ? 'PM' : 'AM'\n\t\t}\n\t}\n\n\treturn {\n\t\thour : res_hour, minute : res_minute, meridiem : res_meridiem\n\t}\n}\n\nexport const generateTimeOutput = (\n\t{hour, minute, meridiem} : MainTime, \n\ttime_format:string\n):OutputTime => {\n\t\n\tlet hour24 = hour\n\t// create hour24\n\tif(meridiem === 'PM') {\n\t\t// 12 PM is 12 hrs\n\t\thour24 =(hour === 12) ? 12 : hour + 12\n\t} else {\n\t\t// 12 AM is 00 hrs\n\t\tif(hour === 12) hour24 = 0\n\t}\n\tlet time = {hour, minute, meridiem, hour24}\n\n\t// create time formatted string\n\tlet now = new Date()\n\tnow.setHours(hour24)\n\tnow.setMinutes(minute)\n\tconst formatted = format(now, time_format)\n\n\treturn {\n\t\tformatted,\n\t\ttime\n\t}\n}","import React, {useState, useCallback} from \"react\";\n\nimport ClockFace from './ClockFace'\n\nimport { createInputTime, generateTimeOutput } from \"./utils\";\n\nimport { TimePickerProps, MainTime } from \"./interfaces\";\n\nimport styles from './timepicker.css'\n\n\nexport default ({time, format='hh:mm aaa', onTimeUpdate} : TimePickerProps) => {\n\n\tconst [curr_time, setTime] = useState(createInputTime(time))\n\n\tconst handleTimeChange = useCallback((new_time : MainTime) => {\n\t\tconst res_time = generateTimeOutput(new_time, format)\n\t\tsetTime(new_time)\n\t\tonTimeUpdate(res_time)\n\t}, [])\n\n\t\n\treturn(\n\t\t<div className={styles.wrapper} style={{}}>\n\t\t\t<TimeTitleWrapper {...curr_time} time_format={format} />\n\n\t\t\t<ClockFace {...curr_time} onTimeUpdate={handleTimeChange} />\n\t\t</div>\n\t)\n}\n\n\ninterface TimeTitleWrapperProps extends MainTime {\n\ttime_format : string\n}\n\nconst TimeTitleWrapper = ({hour, minute, meridiem, time_format}:TimeTitleWrapperProps) => {\n\n\tconst {formatted} = generateTimeOutput({hour, minute, meridiem}, time_format)\n\n\treturn (\n\t\t<div className={styles.title}>\n\t\t\t{formatted}\n\t\t</div>\n\t)\n}","import { format } from \"date-fns\";\n\nexport const formatMonth = (month:number, str_format:string = 'MMM'):string => {\n\tconst now = new Date()\n\tnow.setMonth(month)\n\treturn format(now, str_format)\n}","import TimePickerModule from \"./timepicker/TimePicker\";\nimport MonthPickerModule from \"./monthpicker/MonthPicker\";\n\nexport const TimePicker = TimePickerModule\nexport const MonthPicker = MonthPickerModule","import React, { useState, useCallback } from 'react'\nimport { range } from 'lodash'\n\nimport { formatMonth } from \"./utils\";\n\nimport styles from './monthpicker.css'\nimport root_styles from '../root.css'\n\ninterface OutputShape {\n\t// 0 -> 11, 0 = Jan; 11 = Dec\n\tmonth : number,\n\tyear : number\n}\n\nexport interface MonthPickerProps extends OutputShape {\n\tonTimeUpdate : ({}:OutputShape) => void\n}\n\nexport default ({month, year, onTimeUpdate}:MonthPickerProps) => {\n\n\tconst [edit, setEdit] = useState(false)\n\tconst [res_year, setYear] = useState(year)\n\tconst [res_month, setMonth] = useState(month)\n\n\t// crousel scroll in em\n\tconst pos_change_delta = 13.8\n\tconst [m_pos, setMPos] = useState(-Math.floor(res_month/3) * pos_change_delta)\n\n\tconst handleTimeChange = useCallback((new_time : OutputShape) => {\n\t\tsetYear(new_time.year)\n\t\tsetMonth(new_time.month)\n\t\tsetEdit(false)\n\t\tonTimeUpdate(new_time)\n\t}, [])\n\n\t// change direction : 1 : increment , 0 : decrement\n\tconst handleMonthPosChange = useCallback((change_dir:number) => {\n\t\tif(change_dir) {\n\t\t\tconst next_pos = m_pos + pos_change_delta\n\t\t\tif(next_pos < 0) setMPos(next_pos)\n\t\t} else {\n\t\t\tconst next_pos = m_pos - pos_change_delta\n\t\t\tif(next_pos > -42) setMPos(next_pos)\n\t\t}\n\t}, [m_pos])\n\n\tconst month_list = range(0, 12)\n\n\treturn (\n\t\t<div className={styles.wrapper}>\n\t\t\t{edit ?\n\t\t\t\t<div className={styles.year_edit}>\n\t\t\t\t\t<input placeholder=\"Year ( YYYY )\" \n\t\t\t\t\t\tvalue={res_year} \n\t\t\t\t\t\tonChange={(e) => setYear(Number(e.target.value))} />\n\n\t\t\t\t\t<div onClick={() => handleTimeChange({month : res_month, year : res_year})}>\n\t\t\t\t\t\tDone\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t:\n\t\t\t\t<div className={styles.year_show} onClick={() => setEdit(true)}>\n\t\t\t\t\t{res_year} {formatMonth(res_month, 'MMMM')}\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t<div className={styles.month_wrapper} >\n\t\t\t\t<div onClick={() => handleMonthPosChange(1)}\n\t\t\t\t\t\tclassName={[styles.crousel_btns, root_styles.no_select].join(' ')}> &lt; </div>\n\n\t\t\t\t<div className={styles.month_pill_wrapper}>\n\t\t\t\t\t<div className={styles.month_pill_crousel} style={{transform:`translateX(${m_pos}em)`}}>\n\n\t\t\t\t\t\t{month_list.map((curr_month) => {\n\n\t\t\t\t\t\t\tconst m_class = (curr_month === res_month) ?\n\t\t\t\t\t\t\t\tstyles.month_pill_active : styles.month_pill\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className={m_class} key={curr_month}\n\t\t\t\t\t\t\t\t\tonClick={() => handleTimeChange({year:res_year, month:curr_month})} >\n\t\t\t\t\t\t\t\t\t{formatMonth(curr_month, \"MMM\")}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div onClick={() => handleMonthPosChange(0)}\n\t\t\t\t\t\tclassName={[styles.crousel_btns, root_styles.no_select].join(' ')}> &gt; </div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import React from 'react'\n\nimport { TimePicker, MonthPicker } from 'react-datetime-range-super-picker'\nimport 'react-datetime-range-super-picker/dist/index.css'\n\nconst App = () => {\n\treturn (\n\t\t<div style={{textAlign:'center', marginTop:\"100px\"}}>\n\n\t\t\t<div style={{margin:\"50px 0px\", fontSize:\"2em\"}}>TimePicker</div>\n\t\t\t<TimePicker time={{hour24 : 22, minute : 30}} \n\t\t\t\tonTimeUpdate={(time) => console.log(time)} />\n\n\t\t\t<div style={{margin:\"50px 0px\", fontSize:\"2em\"}}>MonthPicker</div>\n\t\t\t<MonthPicker month={10} year={1991}\n\t\t\t\tonTimeUpdate={(time) => console.log(time)} />\n\t\t</div>\n\t)\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}