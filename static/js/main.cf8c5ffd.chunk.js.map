{"version":3,"sources":["../../src/timepicker/ClockFace.tsx","../../src/timepicker/utils.ts","../../src/timepicker/interfaces.ts","../../src/timepicker/TimePicker.tsx","../../src/datepicker/interfaces.ts","../../src/datepicker/utils.ts","../../src/monthpicker/utils.ts","../../src/monthpicker/MonthPicker.tsx","../../src/datepicker/DatePicker.tsx","../../src/datetimepicker/interfaces.ts","../../src/datetimepicker/utils.ts","../../src/datetimepicker/DateTimePicker.tsx","../../src/rangepicker/RangePicker.tsx","../../src/index.tsx","../../src/datepicker/DatePickerInput.tsx","../../src/datetimepicker/DateTimePickerInput.tsx","../../src/rangepicker/RangePickerInput.tsx","App.js","index.js"],"names":["hour","minute","meridiem","onTimeUpdate","clock_tick_list","range","className","styles","curr_minute","tick","rotation","hh_class","mm_class","key","style","transform","left","hand_position","onClick","ClockHands","mm_rotation","hh_rotation","React","top","createInputTime","input_time","res_hour","res_minute","res_meridiem","isObject","hour24","isUndefined","Number","modulo","isString","trim","hhmm","generateTimeOutput","time","now","formatted","format","defaultConfigs","curr_time","handleTimeChange","useCallback","res_time","new_time","time_format","TimeTitleWrapper","date","weekStartsOn","_type_safe_isValidDate","isValid","formatDate","day","month","year","ip_obj","get","Date","test_date","_WEEK_MAPPER","0","1","2","3","4","5","6","generateDatePickerOutput","date_format","formatMonth","str_format","onDateUpdate","getMonthAndYear","useState","edit","setEdit","res_year","setYear","Math","m_pos","setMPos","useEffect","handleMonthPosChange","next_pos","handleYearChange","new_year","e","isNaN","month_list","wrapper","year_edit","placeholder","value","year_edit_input","onChange","year_edit_submit","year_show","month_wrapper","root_styles","month_pill_wrapper","month_pill_crousel","m_class","curr_month","DatePicker","handleMonthUpdate","state","props","updated_date","handleDateUpdate","onComplete","day_month","new_day","new_month","render","date_id","week_header_list","res_week_list","curr_pointer","index","getWeekList","day_obj_list","curr_date","sm_date","startOfMonth","sw_date","startOfWeek","em_date","endOfMonth","sm_day","em_day","res_list","id","start_delta","sw_day","sw_month","this_day","chunked_res_list","chunk","last_week_ind","end_delta","next_month","addDays","getDayList","calender_wrapper","week_day_header","i","week_day_title","calender_row","week","opacity","curr_day","day_class","j","date_obj","getDerivedStateFromProps","Component","getInputDate","time_str","date_time_input","timeDefaultConfig","time_obj","date_output","time_output","generateOutPut","new_time_json","current_date_obj","result","getInitialDateForInput","UnwrappedDateTimePicker","onDateTimeUpdate","handleTimeUpdate","undefined","dateFormat","timeFormat","table_cell","timeDefaultConfigs","dateDefaultConfigs","DateTimePicker","RangePicker","is_to_date","advance_pill","handleDateTimeUpdate","onFromDateTimeUpdate","onToDateTimeUpdate","from_date","onFromTimeUpdate","onFromDateUpdate","to_date","onToTimeUpdate","onToDateUpdate","onDone","common_props","from_date_str","to_date_str","table_wrapper","header","header_div","header_label","header_field_active","header_field","Boolean","done_btn","advance_cell","handleThisMonth","handleLastMonth","handleThisWeek","handleLastWeek","handleToday","handleYesterday","from_ts","startOfToday","to_ts","endOfToday","startOfYesterday","endOfYesterday","subMonths","endOfWeek","subWeeks","TimePicker","MonthPicker","DatePickerModule","DatePickerInput","show_picker","setShow","show_date","setDate","picker_input","readOnly","borderBottom","onFocus","popupStyle","DateTimePickerModuel","DateTimePickerInput","picker_header_wrapper","background","picker_header_btn","color","DateTimeRangePicker","DateTimeRangePickerInput","App","res_day","setDay","res_month","setMonth","setHour","setMin","setFromDate","setToDate","handleRangePickerFromDate","handleRangePickerToDate","handleUpdate","handleFullDateTimeUpdate","args","textAlign","margin","display","padding","marginBottom","flex","borderLeft","fontSize","borderRight","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.cf8c5ffd.chunk.js","sourcesContent":["import React from 'react';\nimport {range} from 'lodash'\n\nimport { MainTime } from \"./interfaces\";\nimport styles from './timepicker.css'\n\n\ninterface ClockFaceProps extends MainTime {\n\tonTimeUpdate : ({}:MainTime) => void\n}\n\n// making inline css due to problem with css modules on production build\nconst CLOCK_SIZE = 16 // em\nconst CLOCK_HAND_HEIGHT = 1.8 // em\n\nexport default ({hour, minute, meridiem, onTimeUpdate} : ClockFaceProps) => {\n\tconst clock_tick_list: number[] = range(1, 13)\n\tconst hand_position = (CLOCK_SIZE / 2) + (CLOCK_HAND_HEIGHT / 2 )\n\n\treturn (\n\t\t<div className={styles.clockface} >\n\t\t\t<div className={styles.clock}>\n\n\t\t\t\t<ClockHands hour={hour} minute={minute} />\n\n\t\t\t\t{ // draw clock hands\n\t\t\t\tclock_tick_list.map((tick) => {\n\t\t\t\t\tconst curr_minute = tick === 12 ? 0 : (tick * 5)\n\t\t\t\t\tlet rotation = tick === 12 ? 0 : tick * 30\n\t\t\t\t\t// adjust hands so 12 O'clock is at the top rather than at 3 O'clock\n\t\t\t\t\trotation -= 90\n\t\t\t\t\t// is current tick active ?\n\t\t\t\t\tconst hh_class = tick === hour ? styles.hh_active : styles.hh\n\t\t\t\t\tconst mm_class = curr_minute === minute ? styles.mm_active : styles.mm\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className={styles.hand_wrapper} key={tick} \n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttransform:`rotate(${rotation}deg)`,\n\t\t\t\t\t\t\t\tleft:`${hand_position}em`\n\t\t\t\t\t\t\t}} >\n\n\t\t\t\t\t\t\t<div className={mm_class} style={{transform:`rotate(${-rotation}deg)`}}\n\t\t\t\t\t\t\t\tonClick={() => onTimeUpdate({hour, meridiem, minute:curr_minute})}>\n\t\t\t\t\t\t\t\t{curr_minute}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className={hh_class} style={{transform:`rotate(${-rotation}deg)`}}\n\t\t\t\t\t\t\t\tonClick={() => onTimeUpdate({minute, meridiem, hour:tick})}>\n\t\t\t\t\t\t\t\t{tick}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\n\t\t\t</div>\n\t\t\t<div className={`${meridiem==='AM' ? \n\t\t\t\tstyles.meridiem_active : styles.meridiem} ${styles.meridiem_am}`}\n\t\t\t\tonClick={() => onTimeUpdate({hour, minute, meridiem:\"AM\"})} >AM</div>\n\n\t\t\t<div className={`${meridiem==='PM' ? \n\t\t\t\tstyles.meridiem_active : styles.meridiem} ${styles.meridiem_pm}`}\n\t\t\t\tonClick={() => onTimeUpdate({hour, minute, meridiem:\"PM\"})} >PM</div>\n\t\t</div>\n\t)\n}\n\nconst ClockHands = ({hour, minute}:any) => {\n\tconst mm_rotation = ((minute / 5) * 30) - 90\n\tconst hh_rotation = hour === 12 ? -90 : (hour * 30) - 90\n\n\tconst hand_position = (CLOCK_SIZE / 2) + (CLOCK_HAND_HEIGHT / 2 )\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className={styles.mm_hand} \n\t\t\t\tstyle={{\n\t\t\t\t\ttransform:`rotate(${mm_rotation}deg)`,\n\t\t\t\t\ttop : `${hand_position}em`,\n\t\t\t\t\tleft : `${hand_position}em`\n\t\t\t\t}} ></div>\n\t\t\t<div className={styles.hh_hand} \n\t\t\t\tstyle={{\n\t\t\t\t\ttransform:`rotate(${hh_rotation}deg)`,\n\t\t\t\t\ttop : `${hand_position}em`,\n\t\t\t\t\tleft : `${hand_position}em`\n\t\t\t\t}} ></div>\n\t\t</React.Fragment>\n\t)\n}","import { isObject, isString, isUndefined, trim } from \"lodash\";\nimport { format } from \"date-fns\";\n\n\nimport { TimePickerProps, MainTime, OutputTime } from \"./interfaces\";\n\n\nexport const createInputTime = (input_time : TimePickerProps[\"time\"]):MainTime => {\n\t// default values\n\tlet res_hour = 8, res_minute = 0, res_meridiem = 'AM';\n\n\tif(isObject(input_time)) {\n\t\tconst {hour, hour24, minute, meridiem} = input_time\n\t\tif(isUndefined(hour) && isUndefined(hour24)) {\n\t\t\t// keep hour as it is\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = meridiem ? meridiem : res_meridiem\n\t\t}\n\t\telse if(isUndefined(hour)) {\n\t\t\t// 24 hour format given\n\t\t\tconst modulo = Number(hour24) % 12\n\t\t\tres_hour = modulo === 0 ? 12 : modulo\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = Number(hour24) >= 12 ? 'PM' : 'AM'\n\t\t}\n\t\telse {\n\t\t\t// 12 hour format given\n\t\t\tres_hour = Number(hour) === 0 ? 12 : Number(hour)\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = meridiem ? meridiem : res_meridiem\n\t\t}\n\t} else if (isString(input_time)) {\n\t\tif(input_time.includes(\"M\")) {\n\t\t\t// 12 hrs format\n\t\t\tconst [hhmm, meridiem] = trim(input_time).split(\" \")\n\t\t\tconst [hour, minute] = trim(hhmm).split(\":\")\n\n\t\t\tres_hour = Number(hour) === 0 ? 12 : Number(hour)\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = meridiem ? meridiem : res_meridiem\n\t\t}\n\t\telse {\n\t\t\t// 24 hrs format\n\t\t\tconst [hour24, minute] = trim(input_time).split(\":\")\n\t\t\tconst modulo = Number(hour24) % 12\n\t\t\tres_hour = modulo === 0 ? 12 : modulo\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = Number(hour24) >= 12 ? 'PM' : 'AM'\n\t\t}\n\t}\n\n\treturn {\n\t\thour : res_hour, minute : res_minute, meridiem : res_meridiem\n\t}\n}\n\nexport const generateTimeOutput = (\n\t{hour, minute, meridiem} : MainTime, \n\ttime_format:string\n):OutputTime => {\n\t\n\tlet hour24 = hour\n\t// create hour24\n\tif(meridiem === 'PM') {\n\t\t// 12 PM is 12 hrs\n\t\thour24 =(hour === 12) ? 12 : hour + 12\n\t} else {\n\t\t// 12 AM is 00 hrs\n\t\tif(hour === 12) hour24 = 0\n\t}\n\tlet time = {hour, minute, meridiem, hour24}\n\n\t// create time formatted string\n\tlet now = new Date()\n\tnow.setHours(hour24)\n\tnow.setMinutes(minute)\n\tconst formatted = format(now, time_format)\n\n\treturn {\n\t\tformatted,\n\t\ttime\n\t}\n}","export interface TimeObject { \n\t/** default value : 8 */\n\thour? :number | string, \n\t/** default value : undefined */\n\thour24? :number | string, \n\t/** default value : 0 */\n\tminute?:number | string, \n\t/** default value : AM */\n\tmeridiem? : string\n}\n\nexport interface TimePickerProps {\n\t/** string fromat = \"HH:mm\" ( 24 hrs ) | \"hh:mm aa\" ( 12 hrs ) */\n\t/** default value : 08:00 AM */\n\ttime : undefined | string | TimeObject,\n\t/** default value : hh:mm aaa */\n\tformat? : string\n\tonTimeUpdate : (time:OutputTime) => void\n\tonDone? : () => void\n}\n\n/**\n * Time object used internally for render and updates\n */\nexport interface MainTime {\n\thour : number, // 12 hours format\n\tminute : number,\n\tmeridiem : string\n}\n\nexport interface OutputTime {\n\tformatted : string,\n\ttime : {\n\t\t/** default value : 8 */\n\t\thour :number, \n\t\t/** default value : undefined */\n\t\thour24 :number, \n\t\t/** default value : 0 */\n\t\tminute :number, \n\t\t/** default value : AM */\n\t\tmeridiem : string\n\t}\n}\n\nexport const defaultConfigs = {\n\tformat : 'hh:mm aaa'\n}","import React, {useCallback} from \"react\";\n\nimport ClockFace from './ClockFace'\n\nimport { createInputTime, generateTimeOutput } from \"./utils\";\n\nimport { TimePickerProps, MainTime, defaultConfigs } from \"./interfaces\";\n\nimport styles from './timepicker.css'\n\n\nexport default ({\n\ttime, format=defaultConfigs.format, onTimeUpdate\n} : TimePickerProps) => {\n\n\tconst curr_time = createInputTime(time)\n\n\tconst handleTimeChange = useCallback((new_time : MainTime) => {\n\t\tconst res_time = generateTimeOutput(new_time, format)\n\t\tonTimeUpdate(res_time)\n\t}, [])\n\n\t\n\treturn(\n\t\t<div className={styles.wrapper} style={{}}>\n\t\t\t<TimeTitleWrapper {...curr_time} time_format={format} />\n\n\t\t\t<ClockFace {...curr_time} onTimeUpdate={handleTimeChange} />\n\t\t</div>\n\t)\n}\n\n\ninterface TimeTitleWrapperProps extends MainTime {\n\ttime_format : string\n}\n\nconst TimeTitleWrapper = ({hour, minute, meridiem, time_format}:TimeTitleWrapperProps) => {\n\n\tconst {formatted} = generateTimeOutput({hour, minute, meridiem}, time_format)\n\n\treturn (\n\t\t<div className={styles.title}>\n\t\t\t{formatted}\n\t\t</div>\n\t)\n}","export interface MainDate {\n\tday : number,\n\tmonth : number,\n\tyear : number,\n}\n\nexport interface DatePickerOutPut extends MainDate {\n\tdate : Date,\n\tformatted : string\n}\n\nexport interface DatePickerState extends MainDate {\n\tdate_id : string\n}\n\nexport interface DatePickerProps {\n\t/** default value : new Date() ; i.e. current time  */\n\tdate : Date | MainDate,\n\t/** default value : 0, Sunday */\n\tweekStartsOn : number,\n\t/** default value : 'dd/MM/YYY' */\n\tformat : string\n\tonDateUpdate : ({}:DatePickerOutPut) => void,\n\tonComplete? : () => void\n}\n\nexport interface DayListShape {\n\tday : number,\n\tcurr_month : boolean,\n\t// id : day-month\n\tid : string\n}\n\nexport interface DatePickerInputProps extends DatePickerProps {\n\tinputStyle? : React.CSSProperties,\n\tpopupStyle? : React.CSSProperties,\n\tclassName? : string,\n\tpopupClassName? : string\n}\n\nexport const defaultConfigs = {\n\tdate : new Date(),\n\tformat : 'do MMMM yyyy',\n\tweekStartsOn : 0\n}","import { startOfMonth, startOfWeek, isValid,\n\tendOfMonth, addDays, format as date_format } from \"date-fns\";\nimport {chunk, get} from 'lodash'\n\nimport { DayListShape, DatePickerOutPut, MainDate,\n\tdefaultConfigs } from \"./interfaces\";\n\n\nexport const _type_safe_isValidDate = (time:any):time is Date => {\n\treturn isValid(time)\n}\n\nexport const formatDate = (date:Date | MainDate) => {\n\tif(_type_safe_isValidDate(date)) {\n\t\treturn {day : date.getDate(), month : date.getMonth(), year : date.getFullYear()}\n\t} else {\n\t\t// if(date.day < 0 || date.day > 31) {\n\t\t// \tthrow `invalid date : ${date.day}`\n\t\t// }\n\t\tconst now = defaultConfigs.date\n\t\tlet ip_obj = {\n\t\t\tday : get(date , 'day', now.getDate() ), \n\t\t\tmonth : get(date , 'month', now.getMonth() ), \n\t\t\tyear : get(date , 'year', now.getFullYear() )\n\t\t}\n\t\t// validate if date is correct else reset day\n\t\t// if day is 31 feb or something else\n\t\tconst test_date = new Date(ip_obj.year, ip_obj.month, ip_obj.day)\n\t\tif(test_date.getMonth() !== ip_obj.month) {\n\t\t\tip_obj.day = 1\n\t\t}\n\t\treturn ip_obj\n\t}\n\t\n}\n\nconst _WEEK_MAPPER = {\n\t0 : 'S',\n\t1 : 'M',\n\t2 : 'T',\n\t3 : 'W',\n\t4 : 'T',\n\t5 : 'F',\n\t6 : 'S'\n}\n\n/**\n * 0 based circular array with given length that has inc and desc func\n * \n * @param {Number} value current value that needs to increment\n * @param {Number} length Length of the entire circular array\n */\nexport function incrementCircularData(value:number, length:number) {\n    return (value + 1) % length\n}\n\nexport const getWeekList = (weekStartsOn=defaultConfigs.weekStartsOn):string[] => {\n\tlet res_week_list = []\n\tlet curr_pointer = weekStartsOn\n\tfor (let index = 0; index < 7; index++) {\n\t\tres_week_list.push(_WEEK_MAPPER[curr_pointer])\n\t\tcurr_pointer = incrementCircularData(curr_pointer, 7)\n\t}\n\treturn res_week_list\n}\n\nexport const getDayList = (\n\tday:number, month:number, year:number, weekStartsOn:any = defaultConfigs.weekStartsOn\n) : DayListShape[][] => {\n\tconst curr_date = new Date(year, month, day)\n\t// start month date\n\tconst sm_date = startOfMonth(curr_date)\n\tconst sw_date = startOfWeek(sm_date, {weekStartsOn})\n\tconst em_date = endOfMonth(curr_date)\n\n\tconst sm_day = sm_date.getDate()\n\tconst em_day = em_date.getDate()\n\t// get month days in list\n\tlet res_list = []\n\tfor(let index = sm_day; index <= em_day; index++) {\n\t\tres_list.push({\n\t\t\tday : index, \n\t\t\tcurr_month : true, \n\t\t\tid : `${index}-${month}`\n\t\t})\n\t}\n\t// get padding week days of previous month\n\tlet start_delta = sm_date.getDay() - weekStartsOn\n\t// for week start day greater than current day\n\tif(start_delta < 0) start_delta = 7 + start_delta\n\n\tconst sw_day = sw_date.getDate()\n\tconst sw_month = sw_date.getMonth()\n\tfor(let index = start_delta - 1; index >= 0; index--) {\n\t\tconst this_day = sw_day + index\n\t\t// add at the front\n\t\tres_list.unshift({\n\t\t\tday : this_day, \n\t\t\tcurr_month : false,\n\t\t\tid : `${this_day}-${sw_month}`\n\t\t})\n\t}\n\n\t// calculate last padding\n\tconst chunked_res_list = chunk(res_list, 7)\n\tconst last_week_ind = (chunked_res_list.length - 1)\n\tconst end_delta = 7 - chunked_res_list[last_week_ind].length\n\n\t// get next month\n\tconst next_month = addDays(em_date, 1).getMonth()\n\tfor(let index = 1; index <= end_delta; index++) {\n\t\tchunked_res_list[last_week_ind].push({\n\t\t\tday : index, \n\t\t\tcurr_month : false,\n\t\t\tid : `${index}-${next_month}`\n\t\t})\n\t}\n\n\treturn chunked_res_list\n}\n\n\nexport const generateDatePickerOutput = (\n\tday:number, month:number, year:number, \n\tformat:string) : DatePickerOutPut => {\n\t\t\n\tlet date = new Date(year, month, day)\n\tconst formatted = date_format(date, format)\n\n\tif(date.getDate() !== day) {\n\t\t// reset day as this month don't have that day\n\t\tday = 1\n\t\tdate = new Date(year, month, day)\n\t}\n\n\treturn {date, formatted, day, month, year}\n}\n\nexport const getInitialDateForInput = (\n\tdate : Date | MainDate, format : string=defaultConfigs.format\n):string => {\n\tconst {day, month, year} = formatDate(date)\n\treturn generateDatePickerOutput(day, month, year, format).formatted\n}","import { format } from \"date-fns\";\nimport { get } from \"lodash\";\n\nimport { _type_safe_isValidDate } from \"../datepicker/utils\";\nimport { OutputShape } from \"./interfaces\";\n\nexport const formatMonth = (month:number, str_format:string = 'MMM'):string => {\n\tconst now = new Date()\n\tnow.setMonth(month)\n\treturn format(now, str_format)\n}\n\nexport const getMonthAndYear = (time:OutputShape | Date): OutputShape => {\n\n\tif(_type_safe_isValidDate(time)) {\n\t\t// time is a date object\n\t\treturn {month: time.getMonth(), year: time.getFullYear()}\n\t} else {\n\t\t// time is a month object\n\t\tconst now = new Date()\n\t\treturn {\n\t\t\tmonth : get(time , 'month', now.getMonth() ), \n\t\t\tyear : get(time , 'year', now.getFullYear() )\n\t\t}\n\t}\n}","import React, { useState, useCallback, useEffect } from 'react'\nimport { range, isNaN } from 'lodash'\n\nimport { formatMonth, getMonthAndYear } from \"./utils\";\nimport { MonthPickerProps, OutputShape } from \"./interfaces\";\n\nimport styles from './monthpicker.css'\nimport root_styles from '../root.css'\n\n\n\nexport default ({time=new Date(), onDateUpdate}:MonthPickerProps) => {\n\n\tconst {month, year} = getMonthAndYear(time)\n\n\tconst [edit, setEdit] = useState(false)\n\tconst [res_year, setYear] = useState(year)\n\n\t// crousel scroll in em\n\tconst pos_change_delta = 13.8\n\t// calculate and set pos according to current selected month\n\tconst [m_pos, setMPos] = useState(-Math.floor(month/3) * pos_change_delta)\n\n\tuseEffect(() => {\n\t\tsetMPos(-Math.floor(month/3) * pos_change_delta)\n\t}, [month])\n\n\tconst handleTimeChange = useCallback((new_time : OutputShape) => {\n\t\tsetYear(new_time.year)\n\t\tsetEdit(false)\n\t\tif(onDateUpdate) onDateUpdate(new_time);\n\t}, [])\n\n\t// change direction : 1 : increment , 0 : decrement\n\tconst handleMonthPosChange = useCallback((change_dir:number) => {\n\t\tif(change_dir) {\n\t\t\tconst next_pos = m_pos + pos_change_delta\n\t\t\t// can not go left after Jan\n\t\t\tif(next_pos < 3) setMPos(next_pos)\n\t\t} else {\n\t\t\tconst next_pos = m_pos - pos_change_delta\n\t\t\t// can not go right after Dec\n\t\t\tif(next_pos > -42) setMPos(next_pos)\n\t\t}\n\t}, [m_pos])\n\n\tconst handleYearChange = useCallback((e) => {\n\t\tlet new_year = Number(e.target.value)\n\t\t// validate year is a number\n\t\tif(!isNaN(new_year) && new_year < 9999) setYear(Number(e.target.value))\n\t}, [])\n\n\tconst month_list = range(0, 12)\n\n\treturn (\n\t\t<div className={styles.wrapper}>\n\t\t\t{edit ?\n\t\t\t\t<div className={styles.year_edit}>\n\t\t\t\t\t<input placeholder=\"Year ( YYYY )\" \n\t\t\t\t\t\tvalue={res_year} className={styles.year_edit_input}\n\t\t\t\t\t\tonChange={handleYearChange} />\n\n\t\t\t\t\t<div className={styles.year_edit_submit}\n\t\t\t\t\t\tonClick={() => handleTimeChange({month , year : res_year})}>\n\t\t\t\t\t\tSet\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t:\n\t\t\t\t<div className={styles.year_show} onClick={() => setEdit(true)}>\n\t\t\t\t\t{year} {formatMonth(month, 'MMMM')}\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t<div className={styles.month_wrapper} >\n\t\t\t\t<div onClick={() => handleMonthPosChange(1)}\n\t\t\t\t\tclassName={[styles.crousel_btns, root_styles.no_select].join(' ')}> &lt; </div>\n\n\t\t\t\t<div className={styles.month_pill_wrapper}>\n\t\t\t\t\t<div className={styles.month_pill_crousel} style={{transform:`translateX(${m_pos}em)`}}>\n\n\t\t\t\t\t\t{month_list.map((curr_month) => {\n\n\t\t\t\t\t\t\tlet m_class = (curr_month === month) ?\n\t\t\t\t\t\t\t\tstyles.month_pill_active : styles.month_pill\n\t\t\t\t\t\t\tm_class = [m_class, root_styles.no_select].join(' ')\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className={m_class} key={curr_month}\n\t\t\t\t\t\t\t\t\tonClick={() => handleTimeChange({year:year, month:curr_month})} >\n\t\t\t\t\t\t\t\t\t{formatMonth(curr_month, \"MMM\")}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div onClick={() => handleMonthPosChange(0)}\n\t\t\t\t\tclassName={[styles.crousel_btns, root_styles.no_select].join(' ')}> &gt; </div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","// import React, { useState, useCallback, useEffect } from 'react';\nimport React from 'react'\n\nimport MonthPicker from \"../monthpicker/MonthPicker\";\n\nimport { formatDate, getWeekList, getDayList, generateDatePickerOutput } from \"./utils\";\nimport { DatePickerProps, defaultConfigs, DatePickerState } from \"./interfaces\";\nimport { OutputShape } from '../monthpicker/interfaces'\n\nimport styles from './datepicker.css'\n\n\nexport default class DatePicker extends React.Component<DatePickerProps, DatePickerState> {\n\n\tconstructor(props:DatePickerProps) {\n\t\tsuper(props)\n\n\t\tconst date_obj = formatDate(props.date)\n\t\tthis.state = {\n\t\t\t...date_obj, \n\t\t\tdate_id : `${date_obj.day}-${date_obj.month}`\n\t\t}\n\t}\n\n\tstatic defaultProps = {\n\t\tdate : defaultConfigs.date,\n\t\tweekStartsOn : defaultConfigs.weekStartsOn,\n\t\tformat : defaultConfigs.format\n\t}\n\n\tstatic getDerivedStateFromProps(props:DatePickerProps) {\n\t\tconst date_obj = formatDate(props.date)\n\t\treturn {...date_obj, date_id : `${date_obj.day}-${date_obj.month}`}\n\t}\n\n\thandleMonthUpdate = (updated_date:OutputShape) => {\n\t\tconst {day} = this.state\n\t\tconst {onDateUpdate, format} = this.props\n\n\t\tif(onDateUpdate) onDateUpdate(\n\t\t\tgenerateDatePickerOutput(day, \n\t\t\t\tupdated_date.month, updated_date.year, format))\n\t\t\n\t}\n\n\thandleDateUpdate = (day_month:string) => {\n\t\tconst {year, month} = this.state\n\t\tconst {onDateUpdate, onComplete, format} = this.props\n\n\t\tconst [new_day, new_month] = day_month.split('-').map((s) => Number(s))\n\t\tlet new_year = year\n\t\t\n\t\tif(month === 0 && new_month === 11) {\n\t\t\t// user selected december date from january\n\t\t\t// change year\n\t\t\tnew_year = year - 1\n\t\t} else if(month === 11 && new_month === 0) {\n\t\t\t// user selected jan date from dec\n\t\t\t// change year\n\t\t\tnew_year = year + 1\n\t\t}\n\t\t\n\t\tif(onDateUpdate) onDateUpdate(\n\t\t\tgenerateDatePickerOutput(new_day, new_month, new_year, format))\n\t\t\n\t\tif(onComplete) onComplete()\n\t}\n\n\trender = () => {\n\t\tconst {day, month, year, date_id} = this.state\n\t\tconst {weekStartsOn} = this.props\n\n\t\tconst week_header_list = getWeekList(weekStartsOn)\n\t\tconst day_obj_list = getDayList(day, month, year, weekStartsOn)\n\n\t\treturn(\n\t\t\t<div className={styles.wrapper}>\n\t\t\t\t<MonthPicker time={{month : month, year : year}}\n\t\t\t\t\tonDateUpdate={this.handleMonthUpdate} />\n\n\t\t\t\t<table className={styles.calender_wrapper}>\n\t\t\t\t<tbody>\n\n\t\t\t\t\t<tr className={styles.week_day_header}>\n\t\t\t\t\t\t{week_header_list.map((week_str, i) => {\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<th key={i} className={styles.week_day_title}>\n\t\t\t\t\t\t\t\t\t{week_str}\n\t\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</tr>\n\t\t\t\t\t\n\t\t\t\t\t{day_obj_list.map((week, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<tr className={styles.calender_row} key={i}>\n\n\t\t\t\t\t\t\t\t{week.map((curr_day, j) => {\n\t\t\t\t\t\t\t\t\tconst opacity = curr_day.curr_month ? 1 : 0.5\n\t\t\t\t\t\t\t\t\tconst day_class = curr_day.id === date_id ?\n\t\t\t\t\t\t\t\t\t\tstyles.calender_cell_active : styles.calender_cell\n\n\t\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t\t<td key={j} className={day_class}\n\t\t\t\t\t\t\t\t\t\t\tonClick={() => this.handleDateUpdate(curr_day.id)}\n\t\t\t\t\t\t\t\t\t\t\tstyle={{opacity}} > {curr_day.day}\n\t\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t\t</tr>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</tbody>\n\t\t\t\t</table>\n\t\t\t</div>\n\t\t)\n\t}\n}","import { TimeObject, OutputTime, MainTime } from \"../timepicker/interfaces\";\nimport { MainDate, DatePickerOutPut } from \"../datepicker/interfaces\";\n\nexport interface DateObject extends TimeObject, MainDate {\n\t// { day, month, year, hour? , hour24?, minute?, meridem?}\n}\n\nexport interface DateTimePickerProps {\n\tdate : Date | DateObject,\n\t// optional props\n\t/** default value : 'dd/MM/YYY hh:mm aaa' */\n\tformat : string,\n\ttimeFormat : string,\n\tdateFormat : string,\n\tweekStartsOn : number,\n\n\tonDateTimeUpdate : ({}:DateTimePickerOutPut) => void,\n\tonTimeUpdate? : (time:OutputTime) => void,\n\tonDateUpdate? : ({}:DatePickerOutPut) => void,\n}\n\nexport interface MainDateTimeObject extends MainDate, MainTime {\n\n}\n\nexport interface OutPutDateTime extends MainDate {\n\t// { day, month, year, hour , hour24, minute, meridem }\n\tdate : Date,\n\t/** default value : 8 */\n\thour :number, \n\t/** default value : undefined */\n\thour24 :number, \n\t/** default value : 0 */\n\tminute :number, \n\t/** default value : AM */\n\tmeridiem : string\n}\n\nexport interface DateTimePickerOutPut {\n\tdate : OutPutDateTime,\n\tformatted: string\n}\n\n\nexport interface DateTimePickerInputProps extends DateTimePickerProps {\n\tinputStyle? : React.CSSProperties,\n\tpopupStyle? : React.CSSProperties,\n\tclassName? : string,\n\tpopupClassName? : string\n}\n\nexport const defaultConfigs = {\n\tdate : new Date(),\n\tformat : 'do MMMM yyyy, hh:mm aaa',\n\tweekStartsOn : 0\n}","import { format } from \"date-fns\";\n\nimport { formatDate, _type_safe_isValidDate } from \"../datepicker/utils\";\nimport { createInputTime, generateTimeOutput } from \"../timepicker/utils\";\n\nimport { \n\tDateTimePickerProps, \n\tMainDateTimeObject, \n\tDateTimePickerOutPut,\n\tDateObject,\n\tdefaultConfigs\n} from \"./interfaces\";\nimport { defaultConfigs as timeDefaultConfig, OutputTime } from \"../timepicker/interfaces\";\nimport { DatePickerOutPut } from \"../datepicker/interfaces\";\n\nexport const getInputDate = (\n\tdate_time_input: DateTimePickerProps[\"date\"]\n): MainDateTimeObject => {\n\tif(_type_safe_isValidDate(date_time_input)) {\n\t\tconst time_str = format(date_time_input, timeDefaultConfig.format)\n\t\tconst time_obj = createInputTime(time_str)\n\t\treturn {\n\t\t\tday : date_time_input.getDate(),\n\t\t\tmonth : date_time_input.getMonth(),\n\t\t\tyear : date_time_input.getFullYear(),\n\t\t\t...time_obj\n\t\t}\n\t}\n\n\tlet date_output = formatDate(date_time_input)\n\tconst time_output = createInputTime(date_time_input)\n\n\treturn {...date_output, ...time_output}\n}\n\n\n\nexport const generateOutPut = (\n\tcurr_date:MainDateTimeObject, date_format:string,\n\tdate? : DatePickerOutPut, time? : OutputTime, \n):DateTimePickerOutPut => { // DateTimePickerOutPut\n\tlet result, formatted;\n\n\tif(date) {\n\t\t// date object given; passed from calender component\n\t\tconst new_time_json = generateTimeOutput({...curr_date}, timeDefaultConfig.format)\n\t\tconst current_date_obj = new Date(\n\t\t\tdate.year, date.month, date.day,\n\t\t\tnew_time_json.time.hour24, new_time_json.time.minute\n\t\t)\n\t\tformatted = format(current_date_obj, date_format)\n\n\t\tresult = {\n\t\t\tdate : current_date_obj,\n\t\t\tday : date.day, month: date.month, year: date.year,\n\t\t\t...new_time_json.time\n\t\t}\n\t} else if(time) {\n\t\t// time given; passed from clock component\n\t\tconst current_date_obj = new Date(\n\t\t\tcurr_date.year, curr_date.month, curr_date.day,\n\t\t\ttime.time.hour24, time.time.minute\n\t\t)\n\t\tformatted = format(current_date_obj, date_format)\n\n\t\tresult = {\n\t\t\tday : curr_date.day, month: curr_date.month, year: curr_date.year,\n\t\t\tdate : current_date_obj,\n\t\t\t...time.time\n\t\t}\n\t} else {\n\t\t// only current date given\n\t\tconst new_time_json = generateTimeOutput({...curr_date}, timeDefaultConfig.format)\n\t\tconst current_date_obj = new Date(\n\t\t\tcurr_date.year, curr_date.month, curr_date.day,\n\t\t\tnew_time_json.time.hour24, new_time_json.time.minute\n\t\t)\n\t\tformatted = format(current_date_obj, date_format)\n\n\t\tresult = {\n\t\t\tdate : current_date_obj,\n\t\t\tday : curr_date.day, month: curr_date.month, year: curr_date.year,\n\t\t\t...new_time_json.time\n\t\t}\n\t}\n\n\treturn {\n\t\tdate : result,\n\t\tformatted\n\t}\n}\n\n\nexport const getInitialDateForInput = (\n\tdate:Date | DateObject , format:string=defaultConfigs.format\n): string => {\n\tconst curr_date = getInputDate(date)\n\treturn generateOutPut(curr_date, format).formatted\n}","// import React, { useState, useEffect } from 'react'\nimport React from 'react'\n\nimport DatePicker from '../datepicker/DatePicker'\nimport TimePicker from '../timepicker/TimePicker'\n\nimport { \n\tDateTimePickerProps, \n\tMainDateTimeObject,\n\tdefaultConfigs, \n} from \"./interfaces\";\nimport {defaultConfigs as timeDefaultConfigs } from \"../timepicker/interfaces\"\nimport {defaultConfigs as dateDefaultConfigs } from \"../datepicker/interfaces\"\n\nimport { getInputDate, generateOutPut } from './utils'\n\nimport styles from './date_time_picker.css'\nimport { DatePickerOutPut } from '../datepicker/interfaces';\nimport { OutputTime } from '../timepicker/interfaces';\n\n\nexport class UnwrappedDateTimePicker extends React.Component<DateTimePickerProps, MainDateTimeObject> {\n\n\tconstructor(props:DateTimePickerProps) {\n\t\tsuper(props)\n\n\t\tthis.state = {...getInputDate(props.date)}\n\t}\n\n\tstatic defaultProps = {\n\t\tformat : defaultConfigs.format,\n\t\ttimeFormat: timeDefaultConfigs.format,\n\t\tdateFormat: dateDefaultConfigs.format,\n\t\tweekStartsOn : dateDefaultConfigs.weekStartsOn\n\t}\n\n\tstatic getDerivedStateFromProps(props:DateTimePickerProps) {\n\t\treturn getInputDate(props.date)\n\t}\n\n\thandleDateUpdate = (date:DatePickerOutPut) => {\n\t\tconst {onDateUpdate, onDateTimeUpdate, format} = this.props\n\t\tconst curr_date = this.state\n        \n\t\tif(onDateUpdate) onDateUpdate(date)\n\n\t\tif(onDateTimeUpdate) {\n\t\t\tonDateTimeUpdate(generateOutPut(curr_date, format, date))\n\t\t}\n\t}\n\n\thandleTimeUpdate = (time:OutputTime) => {\n\t\tconst {onTimeUpdate, onDateTimeUpdate, format} = this.props\n\t\tconst curr_date = this.state\n        \n\t\tif(onTimeUpdate) onTimeUpdate(time)\n\n\t\tif(onDateTimeUpdate) {\n\t\t\tonDateTimeUpdate(generateOutPut(curr_date, format, undefined, time))\n\t\t}\n\t}\n\n\trender = () => {\n\t\tconst curr_date = this.state\n\t\tconst {dateFormat, weekStartsOn, timeFormat} = this.props\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<div className={[styles.table_cell, styles.calender].join(' ')}>\n\t\t\t\t\t<DatePicker date={{\n\t\t\t\t\t\t\tday : curr_date.day,\n\t\t\t\t\t\t\tmonth : curr_date.month,\n\t\t\t\t\t\t\tyear : curr_date.year\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tformat={dateFormat}\n\t\t\t\t\t\tweekStartsOn={weekStartsOn}\n\t\t\t\t\t\tonDateUpdate={this.handleDateUpdate} />\n\t\t\t\t</div>\n\n\t\t\t\t<div className={styles.table_cell}>\n\t\t\t\t\t<TimePicker time={{\n\t\t\t\t\t\t\thour:curr_date.hour, \n\t\t\t\t\t\t\tminute:curr_date.minute,\n\t\t\t\t\t\t\tmeridiem : curr_date.meridiem\n\t\t\t\t\t\t}} \n\t\t\t\t\t\tformat={timeFormat}\n\t\t\t\t\t\tonTimeUpdate={this.handleTimeUpdate} />\n\t\t\t\t</div>\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}\n\n/**\n * Wrapper component required for good design of RangePicker\n * Unwrapped component only has 2 table cells\n * This component wraps table cells into a table\n */\nconst DateTimePicker = (props:DateTimePickerProps) => (\n\t<div className={styles.wrapper}>\n\t\t<UnwrappedDateTimePicker {...props} />\n\t</div>\n)\n\nexport default DateTimePicker","import React from 'react'\nimport { startOfWeek, endOfWeek, subWeeks,\n\tstartOfMonth, endOfMonth, subMonths,\n\tstartOfToday, endOfToday,\n\tstartOfYesterday, endOfYesterday\n} from \"date-fns\";\n\nimport { UnwrappedDateTimePicker } from \"../datetimepicker/DateTimePicker\";\nimport { getInitialDateForInput, \n\tgetInputDate, generateOutPut } from '../datetimepicker/utils';\n\nimport { RangePickerProps } from './interfaces'\nimport { DateTimePickerOutPut, defaultConfigs } from '../datetimepicker/interfaces';\nimport styles from \"./rangepicker.css\";\n\n\nexport default class RangePicker extends React.Component<RangePickerProps> {\n\n\tstate = {\n\t\t// from date is selected as default\n\t\tis_to_date : false,\n\t\t// which advance pill is selected\n\t\tadvance_pill : null,\n\t}\n\n\tstatic defaultProps = {\n\t\tfrom_date : defaultConfigs.date,\n\t\tto_date : defaultConfigs.date,\n\t\tweekStartsOn : defaultConfigs.weekStartsOn,\n\t\tformat : defaultConfigs.format\n\t}\n\n\thandleDateTimeUpdate = (date_time:DateTimePickerOutPut) => {\n\t\tconst {is_to_date} = this.state\n\t\tconst {onFromDateTimeUpdate, onToDateTimeUpdate} = this.props\n\n\t\tthis.setState({advance_pill : null})\n\t\tif(is_to_date) {\n\t\t\tonToDateTimeUpdate(date_time)\n\t\t} else {\n\t\t\tonFromDateTimeUpdate(date_time)\n\t\t}\n\t}\n\n\trender = () => {\n\t\tconst {is_to_date, advance_pill} = this.state\n\t\tconst {format, timeFormat, dateFormat, weekStartsOn,\n\t\t\tfrom_date, onFromTimeUpdate, onFromDateUpdate,\n\t\t\tto_date, onToTimeUpdate, onToDateUpdate,\n\t\t\tonDone\n\t\t} = this.props\n\n\t\tconst common_props = {format, timeFormat, dateFormat, weekStartsOn}\n\n\t\tconst from_date_str = getInitialDateForInput(from_date, format)\n\t\tconst to_date_str = getInitialDateForInput(to_date, format)\n\n\t\treturn (\n\t\t\t<div className={styles.wrapper}>\n\t\t\t\t<div className={styles.table_wrapper}>\n\n\t\t\t\t\t<div className={styles.header}>\n\t\t\t\t\t\t<div className={styles.header_div} \n\t\t\t\t\t\t\tonClick={() => this.setState({is_to_date:false})} >\n\n\t\t\t\t\t\t\t<div className={styles.header_label}>From</div>\n\t\t\t\t\t\t\t<div className={is_to_date ? styles.header_field : styles.header_field_active}>\n\t\t\t\t\t\t\t\t{from_date_str}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t<div className={styles.header_div}\n\t\t\t\t\t\t\tonClick={() => this.setState({is_to_date:true})} \n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<div className={styles.header_label}>To</div>\n\t\t\t\t\t\t\t<div className={is_to_date ? styles.header_field_active : styles.header_field}>\n\t\t\t\t\t\t\t\t{to_date_str}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{Boolean(onDone) &&\n\t\t\t\t\t\t\t<div className={styles.done_btn} onClick={onDone}>\n\t\t\t\t\t\t\t\tDone\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t}\n\n\t\t\t\t\t</div>\n\n\t\t\t\t\t<div>\n\t\t\t\t\t\t<div className={styles.advance_cell}>\n\t\t\t\t\t\t\t<div className={advance_pill === 'tm' ? \n\t\t\t\t\t\t\t\tstyles.advance_pill_active : styles.advance_pill} \n\t\t\t\t\t\t\t\tonClick={this.handleThisMonth}>\n\t\t\t\t\t\t\t\tThis Month\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={advance_pill === 'lm' ? \n\t\t\t\t\t\t\t\tstyles.advance_pill_active : styles.advance_pill} \n\t\t\t\t\t\t\t\tonClick={this.handleLastMonth}>\n\t\t\t\t\t\t\t\tLast Month\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className={advance_pill === 'tw' ? \n\t\t\t\t\t\t\t\tstyles.advance_pill_active : styles.advance_pill} \n\t\t\t\t\t\t\t\tonClick={this.handleThisWeek} >\n\t\t\t\t\t\t\t\tThis Week\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={advance_pill === 'lw' ? \n\t\t\t\t\t\t\t\tstyles.advance_pill_active : styles.advance_pill} \n\t\t\t\t\t\t\t\tonClick={this.handleLastWeek}>\n\t\t\t\t\t\t\t\tLast Week\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className={advance_pill === 't' ? \n\t\t\t\t\t\t\t\tstyles.advance_pill_active : styles.advance_pill} \n\t\t\t\t\t\t\t\tonClick={this.handleToday}>\n\t\t\t\t\t\t\t\tToday\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className={advance_pill === 'y' ? \n\t\t\t\t\t\t\t\tstyles.advance_pill_active : styles.advance_pill} \n\t\t\t\t\t\t\t\tonClick={this.handleYesterday}>\n\t\t\t\t\t\t\t\tYesterday\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t{is_to_date ? \n\t\t\t\t\t\t\t// To date component\n\t\t\t\t\t\t\t<UnwrappedDateTimePicker date={to_date}\n\t\t\t\t\t\t\t\tonTimeUpdate={onToTimeUpdate} onDateUpdate={onToDateUpdate}\n\t\t\t\t\t\t\t\tonDateTimeUpdate={this.handleDateTimeUpdate} {...common_props} />\n\t\t\t\t\t\t\t:\n\t\t\t\t\t\t\t\t// from date first\n\t\t\t\t\t\t\t<UnwrappedDateTimePicker date={from_date} \n\t\t\t\t\t\t\t\tonTimeUpdate={onFromTimeUpdate} onDateUpdate={onFromDateUpdate}\n\t\t\t\t\t\t\t\tonDateTimeUpdate={this.handleDateTimeUpdate} {...common_props} />\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n\n\t// Advanced picker handler logic\n\n\thandleToday = () => {\n\t\tconst {format,\n\t\t\tonFromDateTimeUpdate, onToDateTimeUpdate} = this.props\n\n\t\tconst from_ts = startOfToday()\n\t\tconst to_ts = endOfToday()\n\t\tthis.setState({advance_pill: 't'})\n\t\t// call related handlers\n\t\tonFromDateTimeUpdate(generateOutPut(getInputDate(from_ts), format))\n\t\tonToDateTimeUpdate(generateOutPut(getInputDate(to_ts), format))\n\t}\n\n\thandleYesterday = () => {\n\t\tconst {format,\n\t\t\tonFromDateTimeUpdate, onToDateTimeUpdate} = this.props\n\n\t\tconst from_ts = startOfYesterday()\n\t\tconst to_ts = endOfYesterday()\n\t\tthis.setState({advance_pill: 'y'})\n\t\t// call related handlers\n\t\tonFromDateTimeUpdate(generateOutPut(getInputDate(from_ts), format))\n\t\tonToDateTimeUpdate(generateOutPut(getInputDate(to_ts), format))\n\t}\n\n\thandleThisMonth = () => {\n\t\tconst {format,\n\t\t\tonFromDateTimeUpdate, onToDateTimeUpdate} = this.props\n\t\tconst now = new Date()\n\n\t\tlet from_ts = startOfMonth(now)\n\t\tfrom_ts = subMonths(from_ts, 1)\n\t\tlet to_ts = endOfMonth(now)\n\t\tto_ts = subMonths(to_ts, 1)\n\t\tthis.setState({advance_pill: 'tm'})\n\t\t// call related handlers\n\t\tonFromDateTimeUpdate(generateOutPut(getInputDate(from_ts), format))\n\t\tonToDateTimeUpdate(generateOutPut(getInputDate(to_ts), format))\n\t}\n\n\thandleLastMonth = () => {\n\t\tconst {format,\n\t\t\tonFromDateTimeUpdate, onToDateTimeUpdate} = this.props\n\t\tconst now = new Date()\n\n\t\tconst from_ts = startOfMonth(now)\n\t\tconst to_ts = endOfMonth(now)\n\t\tthis.setState({advance_pill: 'lm'})\n\t\t// call related handlers\n\t\tonFromDateTimeUpdate(generateOutPut(getInputDate(from_ts), format))\n\t\tonToDateTimeUpdate(generateOutPut(getInputDate(to_ts), format))\n\t}\n\n\thandleThisWeek = () => {\n\t\tconst {weekStartsOn, format,\n\t\t\tonFromDateTimeUpdate, onToDateTimeUpdate} = this.props\n\t\tconst now = new Date()\n\t\t// @ts-ignore\n\t\tconst from_ts = startOfWeek(now, {weekStartsOn})\n\t\t// @ts-ignore\n\t\tconst to_ts = endOfWeek(now, {weekStartsOn})\n\t\tthis.setState({advance_pill: 'tw'})\n\t\t// call related handlers\n\t\tonFromDateTimeUpdate(generateOutPut(getInputDate(from_ts), format))\n\t\tonToDateTimeUpdate(generateOutPut(getInputDate(to_ts), format))\n\t}\n\n\thandleLastWeek = () => {\n\t\tconst {weekStartsOn, format,\n\t\t\tonFromDateTimeUpdate, onToDateTimeUpdate} = this.props\n\t\tconst now = new Date()\n\t\t// @ts-ignore\n\t\tlet from_ts = startOfWeek(now, {weekStartsOn})\n\t\tfrom_ts = subWeeks(from_ts, 1)\n\t\t// @ts-ignore\n\t\tlet to_ts = endOfWeek(now, {weekStartsOn})\n\t\tto_ts = subWeeks(to_ts, 1)\n\t\tthis.setState({advance_pill: 'lw'})\n\t\t// call related handlers\n\t\tonFromDateTimeUpdate(generateOutPut(getInputDate(from_ts), format))\n\t\tonToDateTimeUpdate(generateOutPut(getInputDate(to_ts), format))\n\t}\n}","import TimePickerModule from \"./timepicker/TimePicker\";\nimport MonthPickerModule from \"./monthpicker/MonthPicker\";\n\nimport DatePickerModule from \"./datepicker/DatePicker\";\nimport DatePickerInputModule from \"./datepicker/DatePickerInput\";\n\nimport DateTimePickerModuel from \"./datetimepicker/DateTimePicker\";\nimport DateTimePickerInputModuel from \"./datetimepicker/DateTimePickerInput\";\n\nimport RangePicker from \"./rangepicker/RangePicker\";\nimport DateTimeRangePickerInputModule from \"./rangepicker/RangePickerInput\"\n\n\nexport const TimePicker = TimePickerModule\nexport const MonthPicker = MonthPickerModule\n\nexport const DatePicker = DatePickerModule\nexport const DatePickerInput = DatePickerInputModule\n\nexport const DateTimePicker = DateTimePickerModuel\nexport const DateTimePickerInput = DateTimePickerInputModuel\n\nexport const DateTimeRangePicker = RangePicker\nexport const DateTimeRangePickerInput = DateTimeRangePickerInputModule","import React, { useState } from 'react';\n\nimport DatePicker from './DatePicker'\n\nimport { getInitialDateForInput } from './utils';\nimport { DatePickerInputProps, DatePickerOutPut } from \"./interfaces\";\nimport styles from './datepicker.css'\n\n\nexport default (props:DatePickerInputProps) => {\n\n\tconst [show_picker, setShow] = useState(false)\n\tconst [show_date, setDate] = useState(\n\t\tgetInitialDateForInput(props.date || new Date(), props.format)\n\t)\n\n\tconst handleDateUpdate = (date_obj:DatePickerOutPut) => {\n\t\tprops.onDateUpdate(date_obj)\n\t\tsetDate(date_obj.formatted)\n\t}\n\n\tconst handleComplete = () => {\n\t\tsetShow(false)\n\t\tif(props.onComplete) props.onComplete()\n\t}\n\n\treturn (\n\t\t<div className={[styles.picker_input_wrapper, props.className].join(' ')} >\n\t\t\t<input value={show_date} className={styles.picker_input} readOnly\n\t\t\t\tstyle={{borderBottom:'1px solid #88b04b', ...props.inputStyle}}\n\t\t\t\tonFocus={() => setShow(true)} />\n\n\t\t\t{show_picker &&\n\t\t\t\t<div className={[styles.picker_model, props.popupClassName].join(' ')}\n\t\t\t\t\tstyle={props.popupStyle} >\n\t\t\t\t\t<DatePicker date={props.date} format={props.format} \n\t\t\t\t\t\tweekStartsOn={props.weekStartsOn} \n\t\t\t\t\t\tonDateUpdate={handleDateUpdate} onComplete={handleComplete} />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}","import React, { useState } from 'react';\n\nimport DateTimePicker from './DateTimePicker'\n\nimport { getInitialDateForInput } from './utils';\nimport { DateTimePickerInputProps, DateTimePickerOutPut } from \"./interfaces\";\nimport styles from './date_time_picker.css'\n\n\nexport default (props:DateTimePickerInputProps) => {\n\n\tconst [show_picker, setShow] = useState(false)\n\tconst [show_date, setDate] = useState(\n\t\tgetInitialDateForInput(props.date || new Date(), props.format)\n\t)\n\n\tconst handleDateUpdate = (date_obj:DateTimePickerOutPut) => {\n\t\tprops.onDateTimeUpdate(date_obj)\n\t\tsetDate(date_obj.formatted)\n\t}\n\n\tconst handleComplete = () => {\n\t\tsetShow(false)\n\t}\n\n\treturn (\n\t\t<div className={[styles.picker_input_wrapper, props.className].join(' ')} >\n\t\t\t<input value={show_date} className={styles.picker_input} readOnly\n\t\t\t\tstyle={{borderBottom:'1px solid #88b04b', ...props.inputStyle}}\n\t\t\t\tonFocus={() => setShow(true)} />\n\n\t\t\t{show_picker &&\n\t\t\t\t<div className={[styles.picker_model, props.popupClassName].join(' ')}\n\t\t\t\t\tstyle={props.popupStyle} >\n\t\t\t\t\t<div className={styles.picker_header_wrapper} style={{background:'#51ADAC'}}>\n\t\t\t\t\t\t<div className={styles.picker_header_btn} onClick={handleComplete}\n\t\t\t\t\t\t\tstyle={{background:'white', color:'#51ADAC'}} >\n\t\t\t\t\t\t\tDone \n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<DateTimePicker date={props.date} \n\t\t\t\t\t\tformat={props.format} timeFormat={props.timeFormat} dateFormat={props.dateFormat}\n\t\t\t\t\t\tweekStartsOn={props.weekStartsOn} \n\t\t\t\t\t\tonDateUpdate={props.onDateUpdate} onTimeUpdate={props.onTimeUpdate}\n\t\t\t\t\t\tonDateTimeUpdate={handleDateUpdate} />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}","import React, { useState } from 'react';\n\nimport RangePicker from \"./RangePicker\";\nimport { RangePickerInputProps } from './interfaces';\nimport { getInitialDateForInput } from '../datetimepicker/utils';\n\nimport styles from \"./rangepicker.css\";\n\n\nexport default (props: RangePickerInputProps) => {\n\tconst [show_picker, setShow] = useState(false)\n\n\tconst from_date_str = getInitialDateForInput(props.from_date, props.format)\n\tconst to_date_str = getInitialDateForInput(props.to_date, props.format)\n\tconst show_date = `${from_date_str} To ${to_date_str}`\n\n\treturn (\n\t\t<div className={[styles.picker_input_wrapper, props.className].join(' ')} >\n\t\t\t<input value={show_date} className={styles.picker_input} readOnly\n\t\t\t\tstyle={{borderBottom:'1px solid #88b04b', ...props.inputStyle}}\n\t\t\t\tonFocus={() => setShow(true)} />\n\n\t\t\t{show_picker &&\n\t\t\t\t<div className={[styles.picker_model, props.popupClassName].join(' ')}\n\t\t\t\t\tstyle={props.popupStyle} >\n\t\t\t\t\t<RangePicker from_date={props.from_date} to_date={props.to_date}\n\t\t\t\t\t\tformat={props.format} timeFormat={props.timeFormat} dateFormat={props.dateFormat}\n\t\t\t\t\t\tweekStartsOn={props.weekStartsOn} \n\t\t\t\t\t\tonFromDateUpdate={props.onFromDateUpdate} onFromTimeUpdate={props.onFromTimeUpdate}\n\t\t\t\t\t\tonFromDateTimeUpdate={props.onFromDateTimeUpdate}\n\t\t\t\t\t\tonToDateUpdate={props.onToDateUpdate} onToTimeUpdate={props.onToTimeUpdate}\n\t\t\t\t\t\tonToDateTimeUpdate={props.onToDateTimeUpdate}\n\t\t\t\t\t\tonDone={() => setShow(false)} />\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t)\n}","import React, { useCallback, useState } from 'react'\n\nimport { TimePicker, MonthPicker, \n\tDatePicker, DatePickerInput,\n\tDateTimePicker, DateTimePickerInput,\n\tDateTimeRangePicker, DateTimeRangePickerInput } from 'react-datetime-range-super-picker'\nimport 'react-datetime-range-super-picker/dist/index.css'\n\nconst App = () => {\n\n\tconst [res_day, setDay] = useState(-40)\n\tconst [res_month, setMonth] = useState(1)\n\tconst [res_year, setYear] = useState(2020)\n\t\t\n\tconst [hour, setHour] = useState(22)\n\tconst [minute, setMin] = useState(30)\n\n\tconst [date, setDate] = useState(new Date())\n\n\tconst [from_date, setFromDate] = useState(new Date())\n\tconst [to_date, setToDate] = useState(new Date())\n\n\tconst handleRangePickerFromDate = ({date}) => {\n\t\tsetFromDate(date.date)\n\t}\n\n\tconst handleRangePickerToDate = ({date}) => {\n\t\tsetToDate(date.date)\n\t}\n\n\tconst handleUpdate = useCallback(({month, year}) => {\n\t\tsetMonth(month)\n\t\tsetYear(year)\n\t}, [])\n\n\tconst handleDateUpdate = ({month, year, day}) => {\n\t\tsetMonth(month)\n\t\tsetYear(year)\n\t\tsetDay(day)\n\t}\n\n\tconst handleTimeUpdate = ({time}) => {\n\t\tsetHour(time.hour24)\n\t\tsetMin(time.minute)\n\t}\n\n\tconst handleFullDateTimeUpdate = (args) => {\n\t\tsetDate(args.date.date)\n\t}\n\n\treturn (\n\t\t<div style={{textAlign:'center', margin:\"100px 0px\"}}>\n\n\t\t<div style={{display:'flex', padding: '50px', marginBottom:'200px'}}>\n\t\t\t<div style={{flex:1}}>\n\t\t\t\t<DateTimeRangePickerInput from_date={from_date} to_date={to_date}\n\t\t\t\t\tonFromDateTimeUpdate={handleRangePickerFromDate} \n\t\t\t\t\tonToDateTimeUpdate={handleRangePickerToDate} />\n\t\t\t</div>\n\t\t\t<div style={{flex:1, borderLeft:'1px dashed grey'}}>\n\t\t\t\t<DateTimeRangePicker from_date={from_date} to_date={to_date}\n\t\t\t\t\tonFromDateTimeUpdate={handleRangePickerFromDate} \n\t\t\t\t\tonToDateTimeUpdate={handleRangePickerToDate} />\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div style={{display:'flex', padding: '50px', marginBottom:'200px'}}>\n\t\t\t<div style={{flex:1}}>\n\t\t\t\t<div style={{marginBottom:\"30px\", fontSize:\"2em\"}}>Date Time Picker Input</div>\n\t\t\t\t<DateTimePickerInput date={date}\n\t\t\t\t\tonDateTimeUpdate={handleFullDateTimeUpdate} />\n\t\t\t</div>\n\n\t\t\t<div style={{flex:1, borderLeft:'1px dashed grey'}}>\n\t\t\t\t<div style={{marginBottom:\"30px\", fontSize:\"2em\"}}>Date Picker Input</div>\n\t\t\t\t<DatePickerInput date={{day:res_day, month: res_month, year:res_year}}\n\t\t\t\t\tonDateUpdate={handleDateUpdate} />\n\t\t\t</div>\n\n\t\t\t<div style={{flex:1, borderLeft:'1px dashed grey'}}>\n\t\t\t\t<div style={{marginBottom:\"30px\", fontSize:\"2em\"}}>Date Time Picker</div>\n\t\t\t\t<DateTimePicker date={date} format=\"dd - MM - y hh:mm aaa\"\n\t\t\t\t\tonDateTimeUpdate={handleFullDateTimeUpdate} />\n\t\t\t</div>\n\t\t</div>\n\n\t\t<div style={{display:'flex', padding: '50px'}}>\n\t\t\t<div style={{flex:1, borderRight:'1px dashed grey'}}>\n\t\t\t\t<div style={{marginBottom:\"30px\", fontSize:\"2em\"}}>Date Picker</div>\n\t\t\t\t<DatePicker weekStartsOn={0} date={{day:res_day, month: res_month, year:res_year}}\n\t\t\t\t\tonDateUpdate={handleDateUpdate} format=\"dd-MM-y\" />\n\t\t\t</div>\n\n\t\t\t<div style={{flex:1}}>\n\t\t\t\t<div style={{marginBottom:\"30px\", fontSize:\"2em\"}}>Time Picker</div>\n\t\t\t\t<TimePicker time={{hour24 : hour, minute }} \n\t\t\t\t\tonTimeUpdate={handleTimeUpdate} />\n\t\t\t</div>\n\n\t\t\t<div style={{flex:1, borderLeft:'1px dashed grey'}}>\n\t\t\t\t<div style={{marginBottom:\"30px\", fontSize:\"2em\"}}>Month Picker</div>\n\t\t\t\t<MonthPicker time={date}\n\t\t\t\t\tonDateUpdate={handleUpdate} />\n\t\t\t</div>\n\t\t</div>\n\n\t\t</div>\n\t)\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}