{"version":3,"sources":["../../src/timepicker/ClockFace.tsx","../../src/timepicker/utils.ts","../../src/timepicker/TimePicker.tsx","../../src/monthpicker/utils.ts","../../src/monthpicker/MonthPicker.tsx","../../src/datepicker/utils.ts","../../src/index.tsx","../../src/datepicker/DatePicker.tsx","App.js","index.js"],"names":["hour","minute","meridiem","onTimeUpdate","clock_tick_list","range","className","styles","curr_minute","tick","rotation","hh_class","mm_class","key","style","transform","left","hand_position","onClick","ClockHands","mm_rotation","hh_rotation","React","top","generateTimeOutput","hour24","time","now","formatted","format","TimeTitleWrapper","time_format","formatMonth","month","str_format","getMonthAndYear","isValid","_type_safe_isValidDate","year","get","Date","onDateUpdate","useState","edit","setEdit","res_year","setYear","Math","m_pos","setMPos","useEffect","handleTimeChange","useCallback","new_time","handleMonthPosChange","next_pos","handleYearChange","new_year","Number","e","isNaN","month_list","wrapper","year_edit","placeholder","value","year_edit_input","onChange","year_edit_submit","year_show","month_wrapper","root_styles","month_pill_wrapper","month_pill_crousel","m_class","curr_month","formatDate","date","day","_WEEK_MAPPER","0","1","2","3","4","5","6","generateDatePickerOutput","date_format","TimePicker","curr_time","input_time","res_hour","res_minute","res_meridiem","isObject","isUndefined","modulo","isString","trim","hhmm","createInputTime","res_time","MonthPicker","DatePicker","weekStartsOn","date_id","setDateID","handleDateUpdate","day_month","new_day","new_month","week_header_list","res_week_list","curr_pointer","index","getWeekList","day_obj_list","curr_date","sm_date","startOfMonth","sw_date","startOfWeek","em_date","endOfMonth","sm_day","em_day","res_list","id","start_delta","sw_day","sw_month","this_day","chunked_res_list","chunk","last_week_ind","end_delta","next_month","addDays","getDayList","updated_date","calender_wrapper","week_day_header","i","week_day_title","calender_row","week","opacity","curr_day","day_class","j","App","res_day","setDay","res_month","setMonth","setHour","setMin","handleUpdate","textAlign","margin","display","padding","flex","borderRight","marginBottom","fontSize","borderLeft","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.83152153.chunk.js","sourcesContent":["import React from 'react';\nimport {range} from 'lodash'\n\nimport { MainTime } from \"./interfaces\";\nimport styles from './timepicker.css'\n\n\ninterface ClockFaceProps extends MainTime {\n\tonTimeUpdate : ({}:MainTime) => void\n}\n\n// making inline css due to problem with css modules on production build\nconst CLOCK_SIZE = 16 // em\nconst CLOCK_HAND_HEIGHT = 1.8 // em\n\nexport default ({hour, minute, meridiem, onTimeUpdate} : ClockFaceProps) => {\n\tconst clock_tick_list: number[] = range(1, 13)\n\tconst hand_position = (CLOCK_SIZE / 2) + (CLOCK_HAND_HEIGHT / 2 )\n\n\treturn (\n\t\t<div className={styles.clockface} >\n\t\t\t<div className={styles.clock}>\n\n\t\t\t\t<ClockHands hour={hour} minute={minute} />\n\n\t\t\t\t{ // draw clock hands\n\t\t\t\tclock_tick_list.map((tick) => {\n\t\t\t\t\tconst curr_minute = tick === 12 ? 0 : (tick * 5)\n\t\t\t\t\tlet rotation = tick === 12 ? 0 : tick * 30\n\t\t\t\t\t// adjust hands so 12 O'clock is at the top rather than at 3 O'clock\n\t\t\t\t\trotation -= 90\n\t\t\t\t\t// is current tick active ?\n\t\t\t\t\tconst hh_class = tick === hour ? styles.hh_active : styles.hh\n\t\t\t\t\tconst mm_class = curr_minute === minute ? styles.mm_active : styles.mm\n\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<div className={styles.hand_wrapper} key={tick} \n\t\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\t\ttransform:`rotate(${rotation}deg)`,\n\t\t\t\t\t\t\t\tleft:`${hand_position}em`\n\t\t\t\t\t\t\t}} >\n\n\t\t\t\t\t\t\t<div className={mm_class} style={{transform:`rotate(${-rotation}deg)`}}\n\t\t\t\t\t\t\t\tonClick={() => onTimeUpdate({hour, meridiem, minute:curr_minute})}>\n\t\t\t\t\t\t\t\t{curr_minute}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t\t<div className={hh_class} style={{transform:`rotate(${-rotation}deg)`}}\n\t\t\t\t\t\t\t\tonClick={() => onTimeUpdate({minute, meridiem, hour:tick})}>\n\t\t\t\t\t\t\t\t{tick}\n\t\t\t\t\t\t\t</div>\n\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)\n\t\t\t\t})}\n\n\t\t\t</div>\n\t\t\t<div className={`${meridiem==='AM' ? \n\t\t\t\tstyles.meridiem_active : styles.meridiem} ${styles.meridiem_am}`}\n\t\t\t\tonClick={() => onTimeUpdate({hour, minute, meridiem:\"AM\"})} >AM</div>\n\n\t\t\t<div className={`${meridiem==='PM' ? \n\t\t\t\tstyles.meridiem_active : styles.meridiem} ${styles.meridiem_pm}`}\n\t\t\t\tonClick={() => onTimeUpdate({hour, minute, meridiem:\"PM\"})} >PM</div>\n\t\t</div>\n\t)\n}\n\nconst ClockHands = ({hour, minute}:any) => {\n\tconst mm_rotation = ((minute / 5) * 30) - 90\n\tconst hh_rotation = hour === 12 ? -90 : (hour * 30) - 90\n\n\tconst hand_position = (CLOCK_SIZE / 2) + (CLOCK_HAND_HEIGHT / 2 )\n\n\treturn (\n\t\t<React.Fragment>\n\t\t\t<div className={styles.mm_hand} \n\t\t\t\tstyle={{\n\t\t\t\t\ttransform:`rotate(${mm_rotation}deg)`,\n\t\t\t\t\ttop : `${hand_position}em`,\n\t\t\t\t\tleft : `${hand_position}em`\n\t\t\t\t}} ></div>\n\t\t\t<div className={styles.hh_hand} \n\t\t\t\tstyle={{\n\t\t\t\t\ttransform:`rotate(${hh_rotation}deg)`,\n\t\t\t\t\ttop : `${hand_position}em`,\n\t\t\t\t\tleft : `${hand_position}em`\n\t\t\t\t}} ></div>\n\t\t</React.Fragment>\n\t)\n}","import { isObject, isString, isUndefined, trim } from \"lodash\";\nimport { format } from \"date-fns\";\n\n\nimport { TimePickerProps, MainTime, OutputTime } from \"./interfaces\";\n\n\nexport const createInputTime = (input_time : TimePickerProps[\"time\"]):MainTime => {\n\t// default values\n\tlet res_hour = 8, res_minute = 0, res_meridiem = 'AM';\n\n\tif(isObject(input_time)) {\n\t\tconst {hour, hour24, minute, meridiem} = input_time\n\t\tif(isUndefined(hour) && isUndefined(hour24)) {\n\t\t\t// keep hour as it is\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = meridiem ? meridiem : res_meridiem\n\t\t}\n\t\telse if(isUndefined(hour)) {\n\t\t\t// 24 hour format given\n\t\t\tconst modulo = Number(hour24) % 12\n\t\t\tres_hour = modulo === 0 ? 12 : modulo\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = Number(hour24) >= 12 ? 'PM' : 'AM'\n\t\t}\n\t\telse {\n\t\t\t// 12 hour format given\n\t\t\tres_hour = Number(hour) === 0 ? 12 : Number(hour)\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = meridiem ? meridiem : res_meridiem\n\t\t}\n\t} else if (isString(input_time)) {\n\t\tif(input_time.includes(\"M\")) {\n\t\t\t// 12 hrs format\n\t\t\tconst [hhmm, meridiem] = trim(input_time).split(\" \")\n\t\t\tconst [hour, minute] = trim(hhmm).split(\":\")\n\n\t\t\tres_hour = Number(hour) === 0 ? 12 : Number(hour)\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = meridiem ? meridiem : res_meridiem\n\t\t}\n\t\telse {\n\t\t\t// 24 hrs format\n\t\t\tconst [hour24, minute] = trim(input_time).split(\":\")\n\t\t\tconst modulo = Number(hour24) % 12\n\t\t\tres_hour = modulo === 0 ? 12 : modulo\n\t\t\tres_minute = Number(minute)\n\t\t\tres_meridiem = Number(hour24) >= 12 ? 'PM' : 'AM'\n\t\t}\n\t}\n\n\treturn {\n\t\thour : res_hour, minute : res_minute, meridiem : res_meridiem\n\t}\n}\n\nexport const generateTimeOutput = (\n\t{hour, minute, meridiem} : MainTime, \n\ttime_format:string\n):OutputTime => {\n\t\n\tlet hour24 = hour\n\t// create hour24\n\tif(meridiem === 'PM') {\n\t\t// 12 PM is 12 hrs\n\t\thour24 =(hour === 12) ? 12 : hour + 12\n\t} else {\n\t\t// 12 AM is 00 hrs\n\t\tif(hour === 12) hour24 = 0\n\t}\n\tlet time = {hour, minute, meridiem, hour24}\n\n\t// create time formatted string\n\tlet now = new Date()\n\tnow.setHours(hour24)\n\tnow.setMinutes(minute)\n\tconst formatted = format(now, time_format)\n\n\treturn {\n\t\tformatted,\n\t\ttime\n\t}\n}","import React, {useCallback} from \"react\";\n\nimport ClockFace from './ClockFace'\n\nimport { createInputTime, generateTimeOutput } from \"./utils\";\n\nimport { TimePickerProps, MainTime } from \"./interfaces\";\n\nimport styles from './timepicker.css'\n\n\nexport default ({time, format='hh:mm aaa', onTimeUpdate} : TimePickerProps) => {\n\n\tconst curr_time = createInputTime(time)\n\n\tconst handleTimeChange = useCallback((new_time : MainTime) => {\n\t\tconst res_time = generateTimeOutput(new_time, format)\n\t\tonTimeUpdate(res_time)\n\t}, [])\n\n\t\n\treturn(\n\t\t<div className={styles.wrapper} style={{}}>\n\t\t\t<TimeTitleWrapper {...curr_time} time_format={format} />\n\n\t\t\t<ClockFace {...curr_time} onTimeUpdate={handleTimeChange} />\n\t\t</div>\n\t)\n}\n\n\ninterface TimeTitleWrapperProps extends MainTime {\n\ttime_format : string\n}\n\nconst TimeTitleWrapper = ({hour, minute, meridiem, time_format}:TimeTitleWrapperProps) => {\n\n\tconst {formatted} = generateTimeOutput({hour, minute, meridiem}, time_format)\n\n\treturn (\n\t\t<div className={styles.title}>\n\t\t\t{formatted}\n\t\t</div>\n\t)\n}","import { format, isValid } from \"date-fns\";\nimport { get } from \"lodash\";\n\nimport { OutputShape } from \"./interfaces\";\n\nexport const formatMonth = (month:number, str_format:string = 'MMM'):string => {\n\tconst now = new Date()\n\tnow.setMonth(month)\n\treturn format(now, str_format)\n}\n\nconst _type_safe_isValidDate = (time:any):time is Date => {\n\treturn isValid(time)\n}\n\nexport const getMonthAndYear = (time:OutputShape | Date): OutputShape => {\n\n\tif(_type_safe_isValidDate(time)) {\n\t\t// time is a date object\n\t\treturn {month: time.getMonth(), year: time.getFullYear()}\n\t} else {\n\t\t// time is a month object\n\t\tconst now = new Date()\n\t\treturn {\n\t\t\tmonth : get(time , 'month', now.getMonth() ), \n\t\t\tyear : get(time , 'year', now.getFullYear() )\n\t\t}\n\t}\n}","import React, { useState, useCallback, useEffect } from 'react'\nimport { range, isNaN } from 'lodash'\n\nimport { formatMonth, getMonthAndYear } from \"./utils\";\nimport { MonthPickerProps, OutputShape } from \"./interfaces\";\n\nimport styles from './monthpicker.css'\nimport root_styles from '../root.css'\n\n\n\nexport default ({time=new Date(), onDateUpdate}:MonthPickerProps) => {\n\n\tconst {month, year} = getMonthAndYear(time)\n\n\tconst [edit, setEdit] = useState(false)\n\tconst [res_year, setYear] = useState(year)\n\n\t// crousel scroll in em\n\tconst pos_change_delta = 13.8\n\t// calculate and set pos according to current selected month\n\tconst [m_pos, setMPos] = useState(-Math.floor(month/3) * pos_change_delta)\n\n\tuseEffect(() => {\n\t\tsetMPos(-Math.floor(month/3) * pos_change_delta)\n\t}, [month])\n\n\tconst handleTimeChange = useCallback((new_time : OutputShape) => {\n\t\tsetYear(new_time.year)\n\t\tsetEdit(false)\n\t\tif(onDateUpdate) onDateUpdate(new_time);\n\t}, [])\n\n\t// change direction : 1 : increment , 0 : decrement\n\tconst handleMonthPosChange = useCallback((change_dir:number) => {\n\t\tif(change_dir) {\n\t\t\tconst next_pos = m_pos + pos_change_delta\n\t\t\t// can not go left after Jan\n\t\t\tif(next_pos < 3) setMPos(next_pos)\n\t\t} else {\n\t\t\tconst next_pos = m_pos - pos_change_delta\n\t\t\t// can not go right after Dec\n\t\t\tif(next_pos > -42) setMPos(next_pos)\n\t\t}\n\t}, [m_pos])\n\n\tconst handleYearChange = useCallback((e) => {\n\t\tlet new_year = Number(e.target.value)\n\t\t// validate year is a number\n\t\tif(!isNaN(new_year)) setYear(Number(e.target.value))\n\t}, [])\n\n\tconst month_list = range(0, 12)\n\n\treturn (\n\t\t<div className={styles.wrapper}>\n\t\t\t{edit ?\n\t\t\t\t<div className={styles.year_edit}>\n\t\t\t\t\t<input placeholder=\"Year ( YYYY )\" \n\t\t\t\t\t\tvalue={res_year} className={styles.year_edit_input}\n\t\t\t\t\t\tonChange={handleYearChange} />\n\n\t\t\t\t\t<div className={styles.year_edit_submit}\n\t\t\t\t\t\tonClick={() => handleTimeChange({month , year : res_year})}>\n\t\t\t\t\t\tSet\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t:\n\t\t\t\t<div className={styles.year_show} onClick={() => setEdit(true)}>\n\t\t\t\t\t{year} {formatMonth(month, 'MMMM')}\n\t\t\t\t</div>\n\t\t\t}\n\n\t\t\t<div className={styles.month_wrapper} >\n\t\t\t\t<div onClick={() => handleMonthPosChange(1)}\n\t\t\t\t\tclassName={[styles.crousel_btns, root_styles.no_select].join(' ')}> &lt; </div>\n\n\t\t\t\t<div className={styles.month_pill_wrapper}>\n\t\t\t\t\t<div className={styles.month_pill_crousel} style={{transform:`translateX(${m_pos}em)`}}>\n\n\t\t\t\t\t\t{month_list.map((curr_month) => {\n\n\t\t\t\t\t\t\tlet m_class = (curr_month === month) ?\n\t\t\t\t\t\t\t\tstyles.month_pill_active : styles.month_pill\n\t\t\t\t\t\t\tm_class = [m_class, root_styles.no_select].join(' ')\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div className={m_class} key={curr_month}\n\t\t\t\t\t\t\t\t\tonClick={() => handleTimeChange({year:year, month:curr_month})} >\n\t\t\t\t\t\t\t\t\t{formatMonth(curr_month, \"MMM\")}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\n\t\t\t\t<div onClick={() => handleMonthPosChange(0)}\n\t\t\t\t\tclassName={[styles.crousel_btns, root_styles.no_select].join(' ')}> &gt; </div>\n\t\t\t</div>\n\t\t</div>\n\t)\n}","import { startOfMonth, startOfWeek, isValid,\n\tendOfMonth, addDays, format as date_format } from \"date-fns\";\nimport {chunk, get} from 'lodash'\n\nimport { DayListShape, DatePickerOutPut, MainDate } from \"./interfaces\";\n\n\nconst _type_safe_isValidDate = (time:any):time is Date => {\n\treturn isValid(time)\n}\n\nexport const formatDate = (date:Date | MainDate) => {\n\tif(_type_safe_isValidDate(date)) {\n\t\treturn {day : date.getDate(), month : date.getMonth(), year : date.getFullYear()}\n\t} else {\n\t\tconst now = new Date()\n\t\treturn {\n\t\t\tday : get(date , 'day', now.getDate() ), \n\t\t\tmonth : get(date , 'month', now.getMonth() ), \n\t\t\tyear : get(date , 'year', now.getFullYear() )\n\t\t}\n\t}\n\t\n}\n\nconst _WEEK_MAPPER = {\n\t0 : 'S',\n\t1 : 'M',\n\t2 : 'T',\n\t3 : 'W',\n\t4 : 'T',\n\t5 : 'F',\n\t6 : 'S'\n}\n\n/**\n * 0 based circular array with given length that has inc and desc func\n * \n * @param {Number} value current value that needs to increment\n * @param {Number} length Length of the entire circular array\n */\nexport function incrementCircularData(value:number, length:number) {\n    return (value + 1) % length\n}\n\nexport const getWeekList = (weekStartsOn=0):string[] => {\n\tlet res_week_list = []\n\tlet curr_pointer = weekStartsOn\n\tfor (let index = 0; index < 7; index++) {\n\t\tres_week_list.push(_WEEK_MAPPER[curr_pointer])\n\t\tcurr_pointer = incrementCircularData(curr_pointer, 7)\n\t}\n\treturn res_week_list\n}\n\nexport const getDayList = (day:number, month:number, year:number, weekStartsOn:any = 0) : DayListShape[][] => {\n\tconst curr_date = new Date(year, month, day)\n\t// start month date\n\tconst sm_date = startOfMonth(curr_date)\n\tconst sw_date = startOfWeek(sm_date, {weekStartsOn})\n\tconst em_date = endOfMonth(curr_date)\n\n\tconst sm_day = sm_date.getDate()\n\tconst em_day = em_date.getDate()\n\t// get month days in list\n\tlet res_list = []\n\tfor(let index = sm_day; index <= em_day; index++) {\n\t\tres_list.push({\n\t\t\tday : index, \n\t\t\tcurr_month : true, \n\t\t\tid : `${index}-${month}`\n\t\t})\n\t}\n\t// get padding week days of previous month\n\tlet start_delta = sm_date.getDay() - weekStartsOn\n\t// for week start day greater than current day\n\tif(start_delta < 0) start_delta = 7 + start_delta\n\n\tconst sw_day = sw_date.getDate()\n\tconst sw_month = sw_date.getMonth()\n\tfor(let index = start_delta - 1; index >= 0; index--) {\n\t\tconst this_day = sw_day + index\n\t\t// add at the front\n\t\tres_list.unshift({\n\t\t\tday : this_day, \n\t\t\tcurr_month : false,\n\t\t\tid : `${this_day}-${sw_month}`\n\t\t})\n\t}\n\n\t// calculate last padding\n\tconst chunked_res_list = chunk(res_list, 7)\n\tconst last_week_ind = (chunked_res_list.length - 1)\n\tconst end_delta = 7 - chunked_res_list[last_week_ind].length\n\n\t// get next month\n\tconst next_month = addDays(em_date, 1).getMonth()\n\tfor(let index = 1; index <= end_delta; index++) {\n\t\tchunked_res_list[last_week_ind].push({\n\t\t\tday : index, \n\t\t\tcurr_month : false,\n\t\t\tid : `${index}-${next_month}`\n\t\t})\n\t}\n\n\treturn chunked_res_list\n}\n\n\nexport const generateDatePickerOutput = (\n\tday:number, month:number, year:number, \n\tformat:string) : DatePickerOutPut => {\n\t\t\n\tlet date = new Date(year, month, day)\n\tconst formatted = date_format(date, format)\n\n\tif(date.getDate() !== day) {\n\t\t// reset day as this month don't have that day\n\t\tday = 1\n\t\tdate = new Date(year, month, day)\n\t}\n\n\treturn {date, formatted, day, month, year}\n}","import TimePickerModule from \"./timepicker/TimePicker\";\nimport MonthPickerModule from \"./monthpicker/MonthPicker\";\nimport DatePickerModule from \"./datepicker/DatePicker\";\n\nexport const TimePicker = TimePickerModule\nexport const MonthPicker = MonthPickerModule\nexport const DatePicker = DatePickerModule","import React, { useState, useCallback, useEffect } from 'react';\n\nimport MonthPicker from \"../monthpicker/MonthPicker\";\n\nimport { formatDate, getWeekList, getDayList, generateDatePickerOutput } from \"./utils\";\nimport { DatePickerProps } from \"./interfaces\";\nimport { OutputShape } from '../monthpicker/interfaces'\n\nimport styles from './datepicker.css'\n\n\nexport default ({\n\tdate=new Date(), \n\tweekStartsOn=0, \n\tformat='dd/MM/YYY',\n\tonDateUpdate\n}:DatePickerProps) => {\n\n\tconst {day, month, year} = formatDate(date)\n    \n\tconst [date_id, setDateID] = useState(`${day}-${month}`)\n\n\tuseEffect(() => {\n\t\tsetDateID(`${day}-${month}`)\n\t}, [day, month])\n\n\tlet handleMonthUpdate = (updated_date:OutputShape) => {\n\n\t\tif(onDateUpdate) onDateUpdate(\n\t\t\tgenerateDatePickerOutput(day, \n\t\t\t\tupdated_date.month, updated_date.year, format))\n\t\t\n\t}\n\n\tconst handleDateUpdate = useCallback((day_month:string) => {\n\t\tconst [new_day, new_month] = day_month.split('-').map((s) => Number(s))\n\t\t\n\t\tif(onDateUpdate) onDateUpdate(\n\t\t\tgenerateDatePickerOutput(new_day, new_month, year, format))\n\t}, [year])\n\n\t// create week list\n\tconst week_header_list = getWeekList(weekStartsOn)\n\tconst day_obj_list = getDayList(day, month, year, weekStartsOn)\n\n\treturn (\n\t\t<div className={styles.wrapper}>\n\t\t\t<MonthPicker time={{month : month, year : year}}\n\t\t\t\tonDateUpdate={handleMonthUpdate} />\n\n\t\t\t<table className={styles.calender_wrapper}>\n\t\t\t<tbody>\n\n\t\t\t\t<tr className={styles.week_day_header}>\n\t\t\t\t\t{week_header_list.map((week_str, i) => {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<th key={i} className={styles.week_day_title}>\n\t\t\t\t\t\t\t\t{week_str}\n\t\t\t\t\t\t\t</th>\n\t\t\t\t\t\t)\n\t\t\t\t\t})}\n\t\t\t\t</tr>\n\t\t\t\t\n\t\t\t\t{day_obj_list.map((week, i) => {\n\t\t\t\t\treturn (\n\t\t\t\t\t\t<tr className={styles.calender_row} key={i}>\n\n\t\t\t\t\t\t\t{week.map((curr_day, j) => {\n\t\t\t\t\t\t\t\tconst opacity = curr_day.curr_month ? 1 : 0.5\n\t\t\t\t\t\t\t\tconst day_class = curr_day.id === date_id ?\n\t\t\t\t\t\t\t\t\tstyles.calender_cell_active : styles.calender_cell\n\n\t\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t\t<td key={j} className={day_class}\n\t\t\t\t\t\t\t\t\t\tonClick={() => handleDateUpdate(curr_day.id)}\n\t\t\t\t\t\t\t\t\t\tstyle={{opacity}} > {curr_day.day}\n\t\t\t\t\t\t\t\t\t</td>\n\t\t\t\t\t\t\t\t)\n\t\t\t\t\t\t\t})}\n\n\t\t\t\t\t\t</tr>\n\t\t\t\t\t)\n\t\t\t\t})}\n\t\t\t</tbody>\n\t\t\t</table>\n\t\t</div>\n\t)\n}","import React, { useCallback, useState } from 'react'\n\nimport { TimePicker, MonthPicker, DatePicker } from 'react-datetime-range-super-picker'\nimport 'react-datetime-range-super-picker/dist/index.css'\n\nconst App = () => {\n\n\tconst [res_day, setDay] = useState(5)\n\tconst [res_month, setMonth] = useState(4)\n\tconst [res_year, setYear] = useState(2020)\n\t\t\n\tconst [hour, setHour] = useState(22)\n\tconst [minute, setMin] = useState(30)\n\n\tconst handleUpdate = useCallback(({month, year}) => {\n\t\tsetMonth(month)\n\t\tsetYear(year)\n\t}, [])\n\n\tconst handleDateUpdate = ({month, year, day}) => {\n\t\tsetMonth(month)\n\t\tsetYear(year)\n\t\tsetDay(day)\n\t}\n\n\tconst handleTimeUpdate = ({time}) => {\n\t\tsetHour(time.hour24)\n\t\tsetMin(time.minute)\n\t}\n\n\tconst date = new Date(res_year, res_month, res_day)\n\n\treturn (\n\t\t<div style={{textAlign:'center', margin:\"100px 0px\"}}>\n\t\t<div style={{display:'flex', padding: '50px'}}>\n\t\t\t<div style={{flex:1, borderRight:'1px dashed grey'}}>\n\t\t\t\t<div style={{marginBottom:\"30px\", fontSize:\"2em\"}}>Date Picker</div>\n\t\t\t\t<DatePicker weekStartsOn={0} date={{day:res_day, month: res_month, year:res_year}}\n\t\t\t\t\tonDateUpdate={handleDateUpdate} format=\"dd-MM-YYY\" />\n\t\t\t</div>\n\n\t\t\t<div style={{flex:1}}>\n\t\t\t\t<div style={{marginBottom:\"30px\", fontSize:\"2em\"}}>Time Picker</div>\n\t\t\t\t<TimePicker time={{hour24 : hour, minute }} \n\t\t\t\t\tonTimeUpdate={handleTimeUpdate} />\n\t\t\t</div>\n\n\t\t\t<div style={{flex:1, borderLeft:'1px dashed grey'}}>\n\t\t\t\t<div style={{marginBottom:\"30px\", fontSize:\"2em\"}}>Month Picker</div>\n\t\t\t\t<MonthPicker time={date}\n\t\t\t\t\tonDateUpdate={handleUpdate} />\n\t\t\t</div>\n\t\t</div>\n\t\t</div>\n\t)\n}\n\nexport default App\n","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App />, document.getElementById('root'))\n"],"sourceRoot":""}